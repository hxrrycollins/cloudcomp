a	a
ceeeioprrsttv	retrospective
no	on
aadgimprs	paradigms
fo	of
ai	ai
aggimmnoprr	programming
fi	if
ouy	you
acnt	cant
aehr	hear
em	me
ist	its
abceesu	because
im	im
in	in
aeeehnprsst	parentheses
	
eenstv	steven
ghirtw	wright
bceoort	october
	
it	it
ahs	has
been	been
isx	six
aersy	years
ceins	since
i	i
defhiins	finished
aadgimprs	paradigms
fo	of
ai	ai
aggimmnoprr	programming
or	or
aipp	paip
adn	and
now	now
eemss	seems
eikl	like
a	a
dgoo	good
eimt	time
ot	to
kloo	look
abck	back
at	at
how	how
ilps	lisp
adn	and
ai	ai
aggimmnoprr	programming
aehv	have
acdeghn	changed
adeptu	update
ailpr	april
	
it	it
ahs	has
now	now
been	been
eorv	over
ent	ten
aersy	years
os	so
eiv	ive
addeptu	updated
hist	this
aegp	page
is	is
ilps	lisp
illst	still
einquu	unique
or	or
at	at
aelst	least
deeffinrt	different
in	in
	
ilps	lisp
deeffor	offered
a	a
abciimnnoot	combination
fo	of
aeefrstu	features
ahtt	that
cdlou	could
not	not
be	be
dfnou	found
in	in
any	any
ehort	other
aaegglnu	language
hist	this
abciimnnoot	combination
adem	made
ilps	lisp
almost	almost
a	a
ceeinssty	necessity
for	for
aceinrt	certain
dikns	kinds
fo	of
korw	work
in	in
ai	ai
adn	and
ehort	other
aaciilnoppst	applications
adn	and
adem	made
ilps	lisp
eht	the
aaegglnu	language
fo	of
ccehio	choice
for	for
a	a
aeglr	large
cimmnotuy	community
fo	of
erssu	users
ceins	since
ehnt	then
ilps	lisp
ahs	has
aadeiimnnt	maintained
adn	and
addde	added
ot	to
aeefrstu	features
btu	but
ehort	other
aaegglnsu	languages
aehv	have
acghtu	caught
pu	up
elst	lets
kloo	look
at	at
eehhrtw	whether
ilps	lisp
is	is
illst	still
einquu	unique
or	or
at	at
aelst	least
deeffinrt	different
fmor	from
ehort	other
aaegglnsu	languages
in	in
	
no	on
p	p
	
fo	of
aipp	paip
i	i
ilst	list
eghit	eight
aimnoprtt	important
acforst	factors
ahtt	that
aekm	make
ilps	lisp
a	a
dgoo	good
aaegglnu	language
for	for
ai	ai
aaciilnoppst	applications
adn	and
adeekmrr	remarked
ahtt	that
lmosty	mostly
eehst	these
allow	allow
a	a
aegmmoprrr	programmer
ot	to
adely	delay
agikmn	making
cdeiinoss	decisions
elst	lets
kloo	look
at	at
how	how
ilps	lisp
acemoprs	compares
ot	to
asy	say
aajv	java
adn	and
hnopty	python
in	in
emrst	terms
fo	of
eehst	these
eghit	eight
acforst	factors
biilntu	builtin
opprstu	support
for	for
ilsst	lists
aajv	java
ahs	has
eht	the
ceortv	vector
epty	type
chhiw	which
allosw	allows
for	for
ceeenqssu	sequences
fo	of
aacdillmnyy	dynamically
aginrvy	varying
eghlnt	length
ilsst	lists
aer	are
beertt	better
deistu	suited
for	for
acfilnnotu	functional
aggimmnoprr	programming
btu	but
aehv	have
eht	the
aaaddeginstv	disadvantage
fo	of
aeilnr	linear
access	access
eimt	time
ehilw	while
ceorstv	vectors
aer	are
beertt	better
deistu	suited
for	for
bcdeeeijnoortt	objectoriented
aggimmnoprr	programming
btu	but
aehv	have
eht	the
aaaddeginstv	disadvantage
fo	of
aeilnr	linear
eimt	time
for	for
cdeeinnorsttuv	nondestructive
hpsu	push
opprstu	support
for	for
ceorstv	vectors
in	in
aajv	java
is	is
not	not
aelnry	nearly
as	as
ceelmopt	complete
as	as
opprstu	support
for	for
ilsst	lists
adn	and
ceeenqssu	sequences
in	in
ilps	lisp
lmosty	mostly
abceesu	because
ilps	lisp
deenorss	endorses
acfilrssst	firstclass
cfinnostu	functions
as	as
aegmnrstu	arguments
ot	to
cfinnostu	functions
aajv	java
amy	may
noos	soon
aehv	have
a	a
cceillnoot	collection
aclss	class
chhiw	which
acelns	cleans
pu	up
emos	some
fo	of
eht	the
aflstu	faults
hitw	with
aeemnorrstu	enumerators
ceorstv	vectors
adn	and
aabehhlsst	hashtables
hnopty	python
oot	too
ahs	has
a	a
ceortv	vector
aclss	class
chhiw	which
it	it
aclls	calls
ilst	list
adn	and
hnopsty	pythons
opprstu	support
is	is
aiilmrs	similar
ot	to
ilpss	lisps
aacimottu	automatic
aegorst	storage
aaeegmmnnt	management
aajv	java
adn	and
hnopty	python
opprstu	support
hist	this
ilps	lisp
aeeiilmmnnopstt	implementations
dent	tend
ot	to
be	be
emor	more
aemrtu	mature
adn	and
efmoprr	perform
beertt	better
acdimny	dynamic
ginpty	typing
aajv	java
aacehstt	attaches
eimnrtu	runtime
epty	type
afiimnnoort	information
ot	to
aceinnsst	instances
fo	of
eht	the
aclss	class
bcejot	object
btu	but
not	not
ot	to
eiiimprtv	primitive
aadt	data
eeelmnst	elements
eehorvw	however
aajv	java
eeiqrrsu	requires
a	a
epty	type
aacdeilnort	declaration
for	for
eervy	every
aabeilrv	variable
hist	this
ahs	has
emos	some
aaadegnstv	advantages
for	for
cdinooprtu	production
cdeo	code
btu	but
ahs	has
aaaddeginsstv	disadvantages
for	for
adipr	rapid
ginoopprtty	prototyping
adn	and
eilnootuv	evolution
fo	of
agmoprrs	programs
aajv	java
deos	does
not	not
aehv	have
a	a
aceeeegilmnprtt	generictemplate
emssty	system
ahtt	that
dlouw	would
allow	allow
epsty	types
efil	life
ceginorrsttv	vectorstring
adn	and
effrssu	suffers
aeglrty	greatly
abceesu	because
fo	of
it	it
hnopsty	pythons
bcejot	object
delmo	model
is	is
eht	the
aems	same
as	as
ilpss	lisps
btu	but
hnopty	python
deos	does
not	not
allow	allow
ailnoopt	optional
epty	type
aacdeilnorst	declarations
as	as
ilps	lisp
deos	does
acfilrssst	firstclass
cfinnostu	functions
aajv	java
ahs	has
amnnoosuy	anonymous
acelsss	classes
chhiw	which
eersv	serve
emos	some
fo	of
eht	the
eopprssu	purposes
fo	of
celorssu	closures
aghhlotu	although
in	in
a	a
elss	less
aeeilrstv	versatile
awy	way
hitw	with
a	a
emor	more
clmsuy	clumsy
anstxy	syntax
in	in
ilps	lisp
ew	we
acn	can
asy	say
aabdlm	lambda
x	x
f	f
g	g
x	x
eehrw	where
in	in
aajv	java
ew	we
dlouw	would
aehv	have
ot	to
asy	say
enw	new
acfinnnortuuy	unaryfunction
	
bcilpu	public
bcejot	object
bcceeeejottux	executeobject
x	x
	
enrrtu	return
acst	cast
fgx	xgf
	
	
eehrw	where
acst	cast
is	is
eht	the
aelr	real
epty	type
fo	of
x	x
hist	this
dlouw	would
lnoy	only
korw	work
hitw	with
acelsss	classes
ahtt	that
beeorsv	observe
eht	the
acfinnnortuuy	unaryfunction
aceefinrt	interface
chhiw	which
cemos	comes
fmor	from
gjl	jgl
adn	and
is	is
not	not
biilntu	builtin
ot	to
aajv	java
hnopty	python
as	as
fo	of
einorsv	version
	
opprsstu	supports
acfilrssst	firstclass
cfinnostu	functions
almost	almost
as	as
ellw	well
as	as
ilps	lisp
ouy	you
dlouw	would
eirtw	write
aabdlm	lambda
x	x
fgx	fgx
eht	the
lnoy	only
aabcdkrw	drawback
is	is
ahtt	that
cdeeloorsv	closedover
aabeilrsv	variables
aer	are
adelnory	readonly
fimnoru	uniform
anstxy	syntax
aajv	java
anstxy	syntax
is	is
fo	of
deimmu	medium
ceilmoptxy	complexity
aceilnrty	certainly
emor	more
celmopx	complex
ahnt	than
ilps	lisp
aajv	java
deos	does
not	not
aceegnoru	encourage
or	or
eenv	even
eimprt	permit
acmors	macros
eht	the
djk	jdk
ceilmoprs	compilers
aer	are
alos	also
aehrrt	rather
ehilost	hostile
ot	to
acdeeeegmnoprrttu	computergenerated
cdeo	code
ghinst	things
chhiw	which
dhlosu	should
be	be
aginnrsw	warnings
eikl	like
aabceehlnru	unreachable
cdeo	code
aer	are
eorrrs	errors
hist	this
is	is
aehmostw	somewhat
efhllpu	helpful
for	for
aehimnnrttuw	humanwritten
cdeo	code
btu	but
is	is
jstu	just
dghinortw	downright
aginnnoy	annoying
for	for
acdeeeegmnoprrttu	computergenerated
cdeo	code
emos	some
aeefrstu	features
fo	of
eht	the
aaegglnu	language
eikl	like
eht	the
elrsu	rules
for	for
ehnw	when
ouy	you
acn	can
aehv	have
a	a
aabeilrv	variable
fo	of
eht	the
aems	same
aemn	name
acddeelr	declared
alos	also
aekm	make
it	it
adhr	hard
ot	to
aeeegnrt	generate
cdeo	code
hnopty	python
anstxy	syntax
is	is
aehmostw	somewhat
eilmprs	simpler
ahnt	than
aajv	java
adn	and
eht	the
ceeenprs	presence
fo	of
aelv	eval
aekms	makes
it	it
abeefils	feasible
ot	to
aeeegnrt	generate
cdeo	code
at	at
eimnrtu	runtime
btu	but
eht	the
ackl	lack
fo	of
a	a
acmor	macro
emssty	system
aekms	makes
it	it
emor	more
deiostu	tedious
ahnt	than
in	in
ilps	lisp
aceeiinrttv	interactive
eeimnnnortv	environment
emos	some
aajv	java
eeimnnnorstv	environments
allow	allow
eiikllps	lisplike
aeefrstu	features
chsu	such
as	as
an	an
aceegiinrttv	intgeractive
acdmmno	command
loop	loop
adn	and
adfinopstx	stopandfix
bdeggginu	debugging
ilps	lisp
eeimnnnorstv	environments
aer	are
illst	still
aadeh	ahead
btu	but
ahtt	that
abblopry	probably
notw	wont
alst	last
glno	long
bejlu	bluej
in	in
aacilprrtu	particular
ahs	has
most	most
fo	of
eht	the
ajmor	major
aeefrstu	features
fo	of
a	a
dgoo	good
ilps	lisp
eeimnnnortv	environment
ouy	you
acn	can
ceeilmopr	recompile
a	a
dehmot	method
inot	into
a	a
ginnnru	running
agmoprr	program
adn	and
ouy	you
acn	can
epty	type
in	in
an	an
eeinoprssx	expression
adn	and
aehv	have
it	it
aadeeltuv	evaluated
adeeiilmmty	immediately
it	it
is	is
ddeeinnt	intended
for	for
aceghint	teaching
eopprssu	purposes
adn	and
i	i
acnt	cant
ellt	tell
fi	if
it	it
is	is
abeilstu	suitable
for	for
cdinooprtu	production
esu	use
hnopty	python
ahs	has
eht	the
aems	same
aceeiinrttv	interactive
aachoppr	approach
as	as
ilps	lisp
btu	but
eht	the
eeimnnnortv	environment
is	is
elss	less
aemrtu	mature
ahnt	than
ilpss	lisps
beeiiilnsttxy	extensibility
hist	this
amy	may
eoprv	prove
ot	to
be	be
aajsv	javas
aekw	weak
inopt	point
aajv	java
korsw	works
ellw	well
as	as
glno	long
as	as
ouy	you
aer	are
giillnw	willing
ot	to
aekm	make
eeghinrtvy	everything
a	a
aclss	class
fi	if
eghimnost	something
enw	new
eikl	like
asy	say
acdeeeinoprstt	aspectoriented
aggimmnoprr	programming
aekst	takes
ffo	off
ilps	lisp
dlouw	would
be	be
abel	able
ot	to
aceinooprrt	incorporate
it	it
hitw	with
acmors	macros
btu	but
aajv	java
dlouw	would
not	not
hiorsty	history
ilps	lisp
ahs	has
eorv	over
	
aersy	years
fo	of
hiorsty	history
aajv	java
ahs	has
	
hnopty	python
	
eno	one
emor	more
aimnoprtt	important
aeefrtu	feature
ahtt	that
ddint	didnt
aekm	make
hist	this
ilst	list
is	is
cceeffiiny	efficiency
ilps	lisp
is	is
abotu	about
	
ot	to
	
eimst	times
aefrst	faster
ahnt	than
aajv	java
adn	and
abotu	about
	
ot	to
	
eimst	times
aefrst	faster
ahnt	than
hnopty	python
ilps	lisp
is	is
abblopry	probably
hiintw	within
	
ot	to
	
fo	of
cc	cc
in	in
cceeffiiny	efficiency
no	on
most	most
aksst	tasks
chhiw	which
is	is
celos	close
eghnou	enough
ahtt	that
eht	the
cdeeeffinrs	differences
ddeenp	depend
emor	more
no	on
eht	the
aegmmoprrrs	programmers
deilnovv	involved
ahnt	than
eht	the
aaegglnu	language
adn	and
celos	close
eghnou	enough
ahtt	that
for	for
most	most
aaciilnoppst	applications
ahtt	that
deeps	speed
is	is
not	not
an	an
eissu	issue
for	for
ilps	lisp
ouy	you
illw	will
deen	need
ot	to
cdeo	code
aceinrt	certain
ghinst	things
aacillprrtuy	particularly
giilnnovv	involving
emmory	memory
aaeegmmnnt	management
ginsu	using
eht	the
ceehinqstu	techniques
in	in
eht	the
bkoo	book
chsu	such
as	as
emmory	memory
ceeorrssu	resources
hist	this
is	is
emor	more
korw	work
for	for
eht	the
aegmmoprrr	programmer
btu	but
is	is
o	o
deeffinrt	different
fmor	from
ahtw	what
c	c
effors	offers
hitw	with
lst	stl
aaclloorst	allocators
hnopty	python
is	is
a	a
deeffinrt	different
orsty	story
eehrt	there
is	is
a	a
aeglr	large
aclss	class
fo	of
belmoprs	problems
for	for
chhiw	which
hnopty	python
is	is
oot	too
losw	slow
ist	its
adhr	hard
ot	to
egt	get
abcehkmnr	benchmark
aadt	data
ahtt	that
is	is
eeelnrtv	relevent
ot	to
oruy	your
est	set
fo	of
aaciilnoppst	applications
btu	but
eehrs	heres
emos	some
aadt	data
aeeilrtv	relative
deepss	speeds
fo	of
	
aaegglnsu	languages
no	on
	
abcehkmnrs	benchmarks
fmor	from
eht	the
aegrt	great
cemoprtu	computer
aaegglnu	language
hooosttu	shootout
deepss	speeds
aer	are
adeilmnorz	normalized
os	so
eht	the
g	g
ceilmopr	compiler
for	for
c	c
is	is
	
os	so
	
aemns	means
ceitw	twice
as	as
losw	slow
	
aemns	means
	
eimst	times
aefrst	faster
abcdgknoru	background
cloors	colors
aer	are
cddeo	coded
accdginor	according
ot	to
deegln	legend
no	on
ghirt	right
eht	the
alst	last
eiln	line
aeeimsstt	estimates
eht	the
	
ot	to
	
aeilqrstu	quartiles
by	by
ghinortw	throwing
otu	out
eht	the
bmoott	bottom
otw	two
adn	and
opt	top
otw	two
ceorss	scores
for	for
aceh	each
aaegglnu	language
estt	test
ilps	lisp
aajv	java
hnopty	python
elpr	perl
c	c
ceeinoptx	exception
adghilnn	handling
	
	
	
	
	
ahhs	hash
access	access
	
	
	
	
	
msu	sum
bemnrsu	numbers
fmor	from
efil	file
	
	
	
	
	
	
x	x
c	c
eeerrsv	reverse
eilns	lines
	
	
	
	
	
	
x	x
c	c
aimrtx	matrix
aciiillmnopttu	multiplication
	
	
	
	
	
	
x	x
c	c
aehoprst	heapsort
	
	
	
	
	
	
x	x
c	c
aarry	array
access	access
	
	
	
	
	
	
x	x
c	c
ilst	list
ceginoprss	processing
	
	
	
	
	
	
x	x
c	c
bcejot	object
aaiiinnnosttt	instantiation
	
	
	
	
	
dorw	word
cnotu	count
	
	
	
	
	
	
ot	to
	
	
ot	to
	
	
ot	to
	
	
ot	to
	
	
ot	to
	
	
ot	to
	
aellorv	overall
ilps	lisp
deos	does
ervy	very
ellw	well
no	on
eht	the
einn	nine
aeefrstu	features
aennoy	anyone
agikmn	making
an	an
bceeijotv	objective
ccehio	choice
abdes	based
no	on
eehst	these
aeefrstu	features
dlouw	would
ceinnotu	continue
ot	to
dfin	find
ilps	lisp
eht	the
best	best
ccehio	choice
for	for
a	a
deiw	wide
aegnr	range
fo	of
aaciilnoppst	applications
btu	but
eehrt	there
aer	are
now	now
abeilv	viable
cdeennorst	contenders
ahtt	that
ddi	did
not	not
eistx	exist
in	in
	
is	is
ilps	lisp
alnoppruu	unpopular
now	now
eno	one
cciiimrst	criticism
fo	of
ilps	lisp
is	is
ahtt	that
it	it
is	is
not	not
as	as
aloppru	popular
as	as
ehort	other
aaegglnsu	languages
adn	and
hstu	thus
ahs	has
a	a
aellmrs	smaller
cimmnotuy	community
fo	of
erssu	users
adn	and
elss	less
deeelmnoptv	development
aciittvy	activity
adnoru	around
it	it
eht	the
aijmorty	majority
fo	of
eht	the
dinrstuy	industry
abblopry	probably
eefls	feels
ahtt	that
ilps	lisp
ahs	has
bceemo	become
elss	less
aeelnrtv	relevant
adn	and
ahtt	that
aajv	java
is	is
agiknt	taking
eorv	over
as	as
eht	the
aaegglnu	language
fo	of
ccehio	choice
my	my
ceeinopprt	perception
in	in
	
asw	was
ahtt	that
ilps	lisp
adh	had
dehl	held
no	on
ot	to
most	most
fo	of
ist	its
affhiltu	faithful
erssu	users
adn	and
addde	added
emos	some
enw	new
enos	ones
ehilw	while
ddeein	indeed
chmu	much
fo	of
eht	the
erst	rest
fo	of
eht	the
dlorw	world
adh	had
dehrsu	rushed
first	first
ot	to
c	c
adn	and
ehnt	then
ot	to
aajv	java
chhiw	which
is	is
accghint	catching
pu	up
afst	fast
btu	but
c	c
illst	still
dhlos	holds
a	a
bgi	big
adel	lead
hstu	thus
ilps	lisp
asw	was
in	in
a	a
abelst	stable
abelostu	absolute
iinoopst	position
btu	but
a	a
aeekrw	weaker
aeeilrtv	relative
iinoopst	position
abceesu	because
fo	of
eht	the
acdeeinrs	increased
opprstu	support
for	for
eht	the
aijmorty	majority
aaegglnsu	languages
c	c
adn	and
aajv	java
adn	and
elss	less
aaccceenpt	acceptance
fo	of
a	a
deiw	wide
aegnr	range
fo	of
aaegglnsu	languages
eht	the
ajmor	major
ilps	lisp
denorsv	vendors
aehilnqru	harlequin
for	for
hmow	whom
i	i
dekorw	worked
for	for
otw	two
aersy	years
adn	and
afnrz	franz
eerw	were
at	at
ahtt	that
eimt	time
eginoprrt	reporting
adesty	steady
acegiinnrs	increasing
aelss	sales
i	i
anstw	wasnt
os	so
ersu	sure
abotu	about
dgiiloot	digitool
ehty	they
aekm	make
a	a
efin	fine
cdoprtu	product
btu	but
it	it
is	is
acm	mac
lnoy	only
adn	and
eht	the
acm	mac
is	is
adilpry	rapidly
gilnos	losing
aekmrt	market
aehrs	share
abemy	maybe
ehty	they
illw	will
cemo	come
abck	back
egnorrst	stronger
no	on
eht	the
eehls	heels
fo	of
os	os
x	x
ilps	lisp
asw	was
illst	still
begin	being
demooprt	promoted
in	in
a	a
eklowy	lowkey
awy	way
by	by
behilprssu	publishers
adn	and
bdeiirrssttu	distributers
eikl	like
aamnoz	amazon
ilps	lisp
ceinnostu	continues
ot	to
ejnoy	enjoy
cekopst	pockets
fo	of
acceilmmor	commercial
ccesssu	success
alpu	paul
aaghmr	graham
ceelnrty	recently
dlos	sold
a	a
ilps	lisp
agmoprr	program
adn	and
eht	the
acmnopy	company
adnoru	around
it	it
ot	to
ahooy	yahoo
for	for
	
iillmno	million
it	it
asw	was
an	an
aghinortu	authoring
loot	tool
for	for
eilnno	online
eorsst	stores
biortz	orbitz
eno	one
fo	of
eht	the
adegiln	leading
aelrtv	travel
cceeemmor	ecommerce
eisst	sites
deos	does
cdeehlsu	schedule
aiiimnoopttz	optimization
ginsu	using
a	a
ilps	lisp
emssty	system
deilppsu	supplied
by	by
aclr	carl
de	de
acekmnrs	marckens
acmnopy	company
ait	ita
aeforstw	software
eht	the
chlptt	clhttp
bew	web
eerrsv	server
is	is
in	in
deiw	wide
esu	use
emos	some
fo	of
eht	the
best	best
korw	work
in	in
abcfiiimnoorst	bioinformatics
is	is
deno	done
in	in
ilps	lisp
for	for
emor	more
aeelmpsx	examples
ees	see
eht	the
afnrz	franz
bew	web
eist	site
eht	the
ciikl	cliki
deinx	index
ilsst	lists
cmmnoo	common
ilps	lisp
ceeorrssu	resources
btu	but
ehty	they
aer	are
not	not
all	all
abeloprt	portable
acorss	across
cl	cl
aeeiilmmnnopstt	implementations
eht	the
ilnux	linux
eeklwy	weekly
ensw	news
eht	the
enop	open
cdeiorrty	directory
enrty	entry
for	for
ilps	lisp
eht	the
acgillmnopps	complanglisp
egnoprsuw	newsgroup
in	in
	
eht	the
adgnr	grand
ehops	hopes
for	for
aajv	java
aehv	have
not	not
adennp	panned
otu	out
aajv	java
ejnosy	enjoys
aegrt	great
ailopprtuy	popularity
in	in
eht	the
eeeinprrst	enterprise
aceps	space
btu	but
ahs	has
not	not
aeknt	taken
eorv	over
as	as
a	a
aeeglnr	general
eopprsu	purpose
adipr	rapid
deeelmnoptv	development
aaegglnu	language
nor	nor
as	as
an	an
ceeffiint	efficient
emsssty	systems
aaegglnu	language
aceefmnoprr	performance
fo	of
aajv	java
aeimnrs	remains
adilms	dismal
ehnw	when
acdemopr	compared
ot	to
c	c
or	or
ot	to
ilps	lisp
im	im
not	not
ersu	sure
hwy	why
ahtt	that
is	is
nsu	sun
aceilnrty	certainly
ahs	has
adh	had
eghnou	enough
eimt	time
adn	and
ceeorrssu	resources
ot	to
eeilmmnpt	implement
a	a
beertt	better
emssty	system
abemy	maybe
ehty	they
dhlosu	should
aehv	have
dehir	hired
emor	more
ceeeiiillmopprrrsstwx	exlispcompilerwriters
defr	fred
bkoors	brooks
is	is
deeoprrt	reported
ot	to
aehv	have
adis	said
emor	more
erssu	users
dfin	find
emor	more
bgsu	bugs
i	i
dnot	dont
hiknt	think
ahstt	thats
a	a
belmopr	problem
for	for
ilps	lisp
ilps	lisp
ahs	has
adh	had
eghnou	enough
aeerrssuy	useryears
ahtt	that
it	it
is	is
emor	more
abelst	stable
ahnt	than
eht	the
ehort	other
aaegglnsu	languages
ew	we
illw	will
cdisssu	discuss
eehr	here
btu	but
eht	the
aiinosttu	situation
for	for
ilps	lisp
in	in
emrst	terms
fo	of
ailopprtuy	popularity
illst	still
aeelrsv	reveals
a	a
aeeknssw	weakness
eht	the
aaegglnu	language
aaddnrst	standard
ahs	has
aadegnstt	stagnated
hiottuw	without
addeginrss	addressing
emos	some
eky	key
eisssu	issues
eikl	like
adeghinrt	threading
cekosst	sockets
adn	and
ehorst	others
eefhmorrrtu	furthermore
eehrt	there
is	is
no	no
ekllnnoww	wellknown
aaddnrst	standard
eiooprrsty	repository
fo	of
abeiilrrs	libraries
for	for
enw	new
cloooprst	protocols
eikl	like
hptt	http
hlmt	html
lmx	xml
aops	soap
cet	etc
addiiilnuv	individual
aeeiilmmnnopstt	implementations
add	add
abeiilrrs	libraries
for	for
eehst	these
adn	and
addiiilnuv	individual
aegmmoprrrs	programmers
aceert	create
ceenooprsu	opensource
aeeiilmmnnopstt	implementations
btu	but
ouy	you
dnot	dont
egt	get
ehmt	them
ghirt	right
otu	out
fo	of
eht	the
box	box
eikl	like
ouy	you
do	do
hitw	with
aajv	java
or	or
hnopty	python
nor	nor
acn	can
ouy	you
dfin	find
ehmt	them
at	at
a	a
egilns	single
acilnoot	location
eikl	like
elprs	perls
acnp	cpan
hist	this
aemns	means
ahtt	that
it	it
aekst	takes
emor	more
korw	work
ot	to
hntu	hunt
eehst	these
abeiilrrs	libraries
dnow	down
adn	and
emos	some
aegmmoprrrs	programmers
diimsss	dismiss
ilps	lisp
for	for
a	a
cejoprt	project
abceesu	because
ehty	they
dnot	dont
adeeiilmmty	immediately
dfin	find
eht	the
abeiilrrs	libraries
ehty	they
deen	need
c	c
afillny	finally
ahs	has
eht	the
aaddnrst	standard
aeelmptt	template
abilrry	library
chhiw	which
aeimnrs	remains
chmu	much
adehrr	harder
ot	to
esu	use
ahnt	than
ilpss	lisps
ceeenqsu	sequence
cfinnostu	functions
btu	but
is	is
aabcelp	capable
fo	of
aegrt	great
aceefmnoprr	performance
in	in
eht	the
adhns	hands
fo	of
adirwz	wizard
lst	stl
aegmmoprrrs	programmers
adn	and
fo	of
aegrt	great
aacdeehhs	headaches
in	in
eht	the
adhns	hands
fo	of
aaeegrv	average
aegmmoprrrs	programmers
ilps	lisp
eeprstx	experts
aer	are
illst	still
as	as
cdeioprtuv	productive
as	as
eerv	ever
btu	but
eenrw	newer
aegmmoprrrs	programmers
aer	are
elss	less
eiklly	likely
ot	to
cikp	pick
pu	up
ilps	lisp
cdeinors	consider
eht	the
fgillnoow	following
aeemrssu	measures
fo	of
aaegglnu	language
ailopprtuy	popularity
in	in
	
i	i
dekloo	looked
at	at
	
aaegglnsu	languages
in	in
	
i	i
adenorrw	narrowed
eht	the
defil	field
ot	to
	
	
aaegglnu	language
bkoos	books
eenstu	usenet
aceilrst	articles
ceenrt	recent
aceilrst	articles
lrsu	urls
bjos	jobs
agv	avg
aknr	rank
c	c
	
	
	
	
	
	
aajv	java
	
	
	
	
	
	
all	all
ilpss	lisps
	
	
	
	
	
	
elpr	perl
	
	
	
	
	
	
aaklllmst	smalltalk
	
	
	
	
	
	
ilps	lisp
	
	
	
	
	
	
gloopr	prolog
	
	
	
	
	
	
eeffil	eiffel
	
	
	
	
	
	
ceehms	scheme
	
	
	
	
	
	
adlny	dylan
	
	
	
	
	
	
for	for
	
cemoprtu	computer
aaegglnsu	languages
hist	this
achrt	chart
aeimmrssuz	summarizes
eht	the
bemnru	number
fo	of
bkoos	books
deeffor	offered
at	at
aamnoz	amazon
eht	the
bemnru	number
fo	of
acdehirv	archived
adn	and
ceenrt	recent
ensw	news
aceilrst	articles
in	in
acglmnop	complang
at	at
adeejnsw	dejanews
eht	the
bemnru	number
fo	of
hist	hits
no	on
eht	the
eqruy	query
aaegglnu	language
cemoprtu	computer
at	at
eefiknos	infoseek
adn	and
eht	the
bemnru	number
fo	of
bjos	jobs
deeffor	offered
at	at
ceehstw	westech
eht	the
cemoprtu	computer
is	is
desu	used
abceesu	because
amny	many
fo	of
eht	the
aaegglnu	language
aemns	names
aer	are
abgimosuu	ambiguous
eeffil	eiffel
eortw	tower
aajv	java
diknr	drink
all	all
ilpss	lisps
aemns	means
acdeehillmnpssy	lispschemedylan
ilps	lisp
is	is
acellry	clearly
bdehin	behind
c	c
adn	and
aajv	java
btu	but
at	at
aelst	least
in	in
eht	the
aabkllpr	ballpark
for	for
all	all
aeemrssu	measures
ceeptx	except
bjos	jobs
ilps	lisp
is	is
ghillsty	slightly
aadeh	ahead
fo	of
elpr	perl
abegint	beating
it	it
in	in
	
fo	of
	
aeemrssu	measures
	
aaegglnu	language
bkoos	books
eenstu	usenet
aceilrst	articles
lrsu	urls
bjos	jobs
agv	avg
aknr	rank
aajv	java
	
	
	
	
	
c	c
	
	
	
	
	
elpr	perl
	
	
	
	
	
hnopty	python
	
	
	
	
	
ilps	lisp
	
	
	
	
	
for	for
	
cemoprtu	computer
aaegglnsu	languages
hist	this
achrt	chart
aeimmrssuz	summarizes
eht	the
bemnru	number
fo	of
bkoos	books
deeffor	offered
at	at
aamnoz	amazon
eht	the
bemnru	number
fo	of
ensw	news
aceilrst	articles
in	in
acglmnop	complang
at	at
eggloo	google
goprsu	groups
eht	the
bemnru	number
fo	of
hist	hits
no	on
eht	the
eqruy	query
aaegglnu	language
cemoprtu	computer
at	at
eggloo	google
adn	and
eht	the
bemnru	number
fo	of
bjos	jobs
deeffor	offered
at	at
cemmnoorst	monstercom
aacgilnnoorsttu	congratulations
ot	to
aamnoz	amazon
for	for
begin	being
eht	the
lnoy	only
eno	one
ot	to
aeimnr	remain
eht	the
deefiiintv	definitive
aacdeeeglorrty	categoryleader
for	for
efiv	five
aersy	years
aajv	java
ahs	has
now	now
demov	moved
aadeh	ahead
fo	of
c	c
in	in
ailopprtuy	popularity
elpr	perl
ahs	has
demov	moved
pu	up
ot	to
eehrw	where
it	it
is	is
aelnry	nearly
ceeiimopttv	competitive
hitw	with
eht	the
bgi	big
otw	two
adn	and
ilps	lisp
ahs	has
demov	moved
dnow	down
now	now
abegin	beaing
an	an
deorr	order
fo	of
adegimntu	magnitude
bdehin	behind
eht	the
ehorst	others
in	in
most	most
aceegiorst	categories
hnopty	python
deegs	edges
otu	out
ilps	lisp
in	in
	
fo	of
	
aceegiorst	categories
eehst	these
aeeemmnrsstu	measurements
aer	are
eprtty	pretty
ccefiiinnstu	unscientific
adn	and
amy	may
not	not
aemn	mean
chmu	much
aefrt	after
i	i
ddi	did
ehmt	them
i	i
abceem	became
aaerw	aware
fo	of
aehnort	another
dstuy	study
deno	done
by	by
beiot	tiobe
aeforstw	software
ahtt	that
ahs	has
aajv	java
bemnru	number
	
c	c
adn	and
c	c
at	at
	
	
adn	and
ilps	lisp
at	at
	
hitw	with
a	a
aekmrt	market
aehrs	share
ht	th
fo	of
aajv	java
aloppru	popular
deos	does
not	not
aemn	mean
beertt	better
adn	and
eehst	these
bemnrsu	numbers
amy	may
not	not
aceelorrt	correlate
ceeflprty	perfectly
hitw	with
ailopprtuy	popularity
btu	but
ehty	they
do	do
asy	say
eghimnost	something
is	is
ilps	lisp
at	at
aelst	least
aloppru	popular
for	for
ai	ai
in	in
	
adn	and
	
eht	the
aenrsw	answer
asw	was
acellry	clearly
esy	yes
btu	but
in	in
	
eht	the
aenrsw	answer
is	is
elss	less
acelr	clear
cdeinors	consider
eht	the
bemnru	number
fo	of
elrsstu	results
for	for
eht	the
fgillnoow	following
eggloo	google
aceehrss	searches
acehrs	search
bemnru	number
fo	of
elrsstu	results
acehrs	search
bemnru	number
fo	of
elrsstu	results
aajv	java
ai	ai
	
aajv	java
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
c	c
ai	ai
	
c	c
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
ilps	lisp
ai	ai
	
ilps	lisp
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
elpr	perl
ai	ai
	
elpr	perl
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
hnopty	python
ai	ai
	
hnopty	python
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
it	it
ahs	has
been	been
bioosuv	obvious
ot	to
most	most
beeorrssv	observers
ahtt	that
eht	the
acehimn	machine
aegilnnr	learning
cimmnotuy	community
in	in
aacilprrtu	particular
ahs	has
demov	moved
aawy	away
fmor	from
ilps	lisp
adorstw	towards
c	c
or	or
ot	to
acdeeiilpsz	specialized
aaacehilmmtt	mathematical
aacegkps	packages
eikl	like
aablmt	matlab
btu	but
im	im
aaclltuy	actually
deiprrssu	surprised
ahtt	that
eht	the
denrt	trend
ahs	has
egno	gone
hist	this
afr	far
adn	and
im	im
ervy	very
deiprrssu	surprised
ot	to
ees	see
aajv	java
no	on
opt	top
abceesu	because
i	i
jstu	just
aehntv	havent
eens	seen
ahtt	that
chmu	much
chnooptt	topnotch
aajv	java
ai	ai
cdeo	code
im	im
alos	also
aademz	amazed
ahtt	that
elpr	perl
ai	ai
aeprssssu	surpasses
ilps	lisp
ai	ai
btu	but
i	i
cepsstu	suspect
ahtt	that
eehrst	theres
emos	some
ehort	other
aegimnn	meaning
fo	of
ai	ai
in	in
eht	the
elpr	perl
dlorw	world
abceesu	because
elpr	perl
aacfiiilrt	artificial
ceeegiillnnt	intelligence
is	is
ellw	well
bdehin	behind
ilps	lisp
aacfiiilrt	artificial
ceeegiillnnt	intelligence
enw	new
ilps	lisp
bkoos	books
eht	the
best	best
in	in
my	my
iinnoop	opinion
aer	are
alpu	paul
aaghmrs	grahams
no	on
ilps	lisp
adn	and
ains	ansi
cmmnoo	common
ilps	lisp
abblopry	probably
eht	the
best	best
bkoo	book
eerv	ever
no	on
how	how
ot	to
eirtw	write
ilps	lisp
ceilmoprs	compilers
adn	and
eeeinprrrstt	interpreters
is	is
achiinrst	christian
ceeinnqsu	queinnecs
ilps	lisp
in	in
allms	small
ceeips	pieces
in	in
eht	the
ceehms	scheme
dlorw	world
abelnos	abelson
adn	and
amnsssu	sussman
aehv	have
a	a
enw	new
deiinot	edition
fo	of
cerrsttuu	structure
adn	and
aeeiinnoprrttt	interpretation
fo	of
cemoprtu	computer
agmoprrs	programs
adn	and
adeiln	daniel
adefimnr	friedman
ahs	has
a	a
enw	new
einorsv	version
fo	of
eht	the
eilltt	little
eilprs	lisper
acdell	called
eht	the
adeenoss	seasoned
ceehmrs	schemer
eehnpst	stephen
adels	slade
ahs	has
a	a
enw	new
bkoo	book
chhiw	which
i	i
aehv	have
not	not
adh	had
a	a
accehn	chance
ot	to
ader	read
ety	yet
ahtw	what
elnosss	lessons
aer	are
in	in
aipp	paip
eehr	here
is	is
my	my
ilst	list
fo	of
eht	the
	
most	most
aimnoprtt	important
elnosss	lessons
in	in
aipp	paip
esu	use
amnnoosuy	anonymous
cfinnostu	functions
p	p
	
aceert	create
enw	new
cfinnostu	functions
celorssu	closures
at	at
nru	run
eimt	time
p	p
	
esu	use
eht	the
most	most
aalnrtu	natural
ainnoott	notation
aaabeillv	available
ot	to
elosv	solve
a	a
belmopr	problem
p	p
	
esu	use
eht	the
aems	same
aadt	data
for	for
aeelrsv	several
agmoprrs	programs
p	p
	
be	be
ccefiips	specific
esu	use
aabcinorsstt	abstractions
be	be
cceinos	concise
esu	use
eht	the
ddeioprv	provided
loost	tools
dnot	dont
be	be
bceorsu	obscure
be	be
ceinnosstt	consistent
p	p
	
esu	use
acmors	macros
fi	if
aellry	really
aceenrssy	necessary
p	p
	
eehrt	there
aer	are
	
or	or
	
ajmor	major
aadt	data
epsty	types
aaefiiilmrz	familiarize
eflorsuy	yourself
hitw	with
ehmt	them
p	p
	
eeehnrvw	whenever
ouy	you
deelopv	develop
a	a
celmopx	complex
aadt	data
cerrsttuu	structure
deelopv	develop
a	a
cdeginnooprrs	corresponding
cceinnossty	consistency
cceehkr	checker
p	p
	
ot	to
elosv	solve
a	a
belmopr	problem
bcdeeirs	describe
it	it
cefipsy	specify
it	it
in	in
acghiilmort	algorithmic
emrst	terms
eeilmmnpt	implement
it	it
estt	test
it	it
bdegu	debug
adn	and
aaelnyz	analyze
it	it
ceeptx	expect
hist	this
ot	to
be	be
an	an
aeeiirttv	iterative
ceoprss	process
p	p
	
ai	ai
aggimmnoprr	programming
is	is
aegllry	largely
aelooprrtxy	exploratory
aggimmnoprr	programming
eht	the
aim	aim
is	is
efnot	often
ot	to
cdeiorsv	discover
emor	more
abotu	about
eht	the
belmopr	problem
aaer	area
p	p
	
a	a
aeeglnr	general
belmopr	problem
elorsv	solver
dhlosu	should
be	be
abel	able
ot	to
elosv	solve
deeffinrt	different
belmoprs	problems
p	p
	
ew	we
mstu	must
eirsst	resist
eht	the
aeimnopttt	temptation
ot	to
beeilv	belive
ahtt	that
all	all
ghiiknnt	thinking
flloosw	follows
eht	the
aacilmnoopttu	computational
delmo	model
p	p
	
eht	the
aimn	main
bcejot	object
fo	of
hist	this
bkoo	book
is	is
ot	to
acesu	cause
eht	the
adeerr	reader
ot	to
asy	say
ot	to
him	him
or	or
eefhlrs	herself
i	i
cdlou	could
aehv	have
einrttw	written
ahtt	that
p	p
	
fi	if
ew	we
eflt	left
otu	out
eht	the
mopprt	prompt
ew	we
cdlou	could
eirtw	write
a	a
ceelmopt	complete
ilps	lisp
eeeinprrrtt	interpreter
ginsu	using
jstu	just
foru	four
blmossy	symbols
cdeinors	consider
ahtw	what
ew	we
dlouw	would
aehv	have
ot	to
do	do
ot	to
eirtw	write
a	a
ilps	lisp
or	or
aaclps	pascal
or	or
aajv	java
eeeinprrrtt	interpreter
in	in
aaclps	pascal
or	or
aajv	java
p	p
	
degins	design
aenprstt	patterns
acn	can
be	be
desu	used
afillmnory	informally
or	or
acn	can
be	be
aabcderstt	abstracted
inot	into
a	a
aflmor	formal
cfinnotu	function
acmor	macro
or	or
aadt	data
epty	type
efnot	often
giilnnovv	involving
deeghhiorrr	higherorder
cfinnostu	functions
p	p
	
esu	use
aaddeinrtv	datadriven
aggimmnoprr	programming
eehrw	where
aaceinnoprttt	patternaction
aiprs	pairs
aer	are
deorst	stored
in	in
a	a
abelt	table
p	p
	
eeimmosst	sometimes
emor	more
is	is
elss	less
ist	its
aeeirs	easier
ot	to
cdeopru	produce
emor	more
opttuu	output
ahnt	than
jstu	just
eht	the
ghirt	right
opttuu	output
p	p
	
ilps	lisp
is	is
not	not
eehilnnrty	inherently
elss	less
ceeffiint	efficient
ahnt	than
ehort	other
eeghhillv	highlevel
aaegglnsu	languages
	
acdhirr	richard
aaefmnt	fateman
p	p
	
first	first
deelopv	develop
a	a
giknorw	working
agmoprr	program
cdenos	second
eimnnrsttu	instrument
it	it
dhirt	third
aceelpr	replace
eht	the
losw	slow
aprst	parts
p	p
	
eht	the
eeprtx	expert
ilps	lisp
aegmmoprrr	programmer
aeellntuvy	eventually
deelopsv	develops
a	a
dgoo	good
cceeffiiny	efficiency
delmo	model
p	p
	
eehrt	there
aer	are
foru	four
aeeglnr	general
ceehinqstu	techniques
for	for
deeginps	speeding
pu	up
an	an
aghilmort	algorithm
accghin	caching
cgiilmnop	compiling
adegilny	delaying
acimnoopttu	computation
adn	and
degiinnx	indexing
p	p
	
ew	we
acn	can
eirtw	write
a	a
ceilmopr	compiler
as	as
a	a
est	set
fo	of
acmors	macros
p	p
	
aciilmnoopt	compilation
adn	and
aeiimmnootz	memoization
acn	can
deily	yield
dflo	fold
deeppssu	speedups
p	p
	
eelllovw	lowlevel
cceeffiiny	efficiency
ccennors	concerns
acn	can
deily	yield
dflo	fold
deeppssu	speedups
p	p
	
for	for
cceeffiiny	efficiency
esu	use
aacdeilnorst	declarations
adiov	avoid
ceeginr	generic
cfinnostu	functions
adiov	avoid
celmopx	complex
aegmnrtu	argument
ilsst	lists
adiov	avoid
aceennrssuy	unnecessary
cginnos	consing
esu	use
eht	the
ghirt	right
aadt	data
cerrsttuu	structure
p	p
	
a	a
aaegglnu	language
ahtt	that
denost	doesnt
acefft	affect
eht	the
awy	way
ouy	you
hiknt	think
abotu	about
aggimmnoprr	programming
is	is
not	not
hortw	worth
giknnow	knowing
	
aaln	alan
eilprs	perlis
p	p
	
gloopr	prolog
eeilrs	relies
no	on
eehrt	three
aimnoprtt	important
adeis	ideas
a	a
fimnoru	uniform
aadt	data
abes	base
cgilo	logic
aabeilrsv	variables
adn	and
aacimottu	automatic
aabccgikknrt	backtracking
p	p
	
gloopr	prolog
is	is
aiilmrs	similar
ot	to
ilps	lisp
no	on
eht	the
aimn	main
inopst	points
p	p
	
bcejot	object
aeiinnoortt	orientation
	
bcejost	objects
	
acelsss	classes
	
aceehiinnrt	inheritance
	
eeprt	peter
eegnrw	wegner
p	p
	
adeinst	instead
fo	of
bghiiinoprt	prohibiting
abgllo	global
aestt	state
as	as
acfilnnotu	functional
aggimmnoprr	programming
deos	does
bcdeeeijnoortt	objectoriented
aggimmnoprr	programming
abekrs	breaks
pu	up
eht	the
lnruuy	unruly
amss	mass
fo	of
abgllo	global
aestt	state
adn	and
aaceelnpsstu	encapsulates
it	it
inot	into
allms	small
aaabeeglmn	manageable
ceeips	pieces
or	or
bcejost	objects
p	p
	
ddeeginnp	depending
no	on
oruy	your
defiiinnot	definition
clos	clos
is	is
or	or
is	is
not	not
bcdeeeijnoortt	objectoriented
it	it
denost	doesnt
opprstu	support
aaceilnnopstu	encapsulation
p	p
	
gloopr	prolog
amy	may
not	not
deioprv	provide
aceltxy	exactly
eht	the
cgilo	logic
ouy	you
antw	want
p	p
	
nor	nor
eht	the
cceeffiiny	efficiency
ouy	you
antw	want
p	p
	
ehort	other
aeeeinnoprrstt	representation
ceehmss	schemes
aer	are
beilopss	possible
abdeelrsu	rulebased
aailnnorstt	translation
is	is
a	a
eflopruw	powerful
adei	idea
eehorvw	however
eeimmosst	sometimes
ouy	you
deen	need
emor	more
cceeffiiny	efficiency
adn	and
deen	need
ot	to
egiv	give
pu	up
eht	the
ciiilmpsty	simplicity
fo	of
a	a
abdeelrsu	rulebased
emssty	system
p	p
	
aagilnnrstt	translating
inpstu	inputs
ot	to
a	a
aaccilnno	canonical
fmor	form
is	is
efnot	often
a	a
dgoo	good
aegrstty	strategy
p	p
	
an	an
eeprtx	expert
emssty	system
egos	goes
bdenoy	beyond
a	a
eilmps	simple
cgilo	logic
aggimmnoprr	programming
emssty	system
it	it
deioprsv	provides
aeginnors	reasoning
hitw	with
aceinnrttuy	uncertainty
aaeilnnopstx	explanations
adn	and
beefillx	flexible
flow	flow
fo	of
clnoort	control
p	p
	
aceinrtty	certainty
acforst	factors
deioprv	provide
a	a
eilmps	simple
awy	way
fo	of
adegiln	dealing
hitw	with
aceinnrttuy	uncertainty
btu	but
eehrt	there
is	is
aeeglnr	general
aeeegmnrt	agreement
ahtt	that
abbeiiiloprst	probabilities
deioprv	provide
a	a
emor	more
dilos	solid
adfinnootu	foundation
p	p
	
eht	the
aegrstty	strategy
ouy	you
esu	use
ot	to
acehrs	search
for	for
a	a
ceeenqsu	sequence
fo	of
dgoo	good
emosv	moves
acn	can
be	be
aimnoprtt	important
p	p
	
ouy	you
acn	can
acemopr	compare
otw	two
deeffinrt	different
aeegirsstt	strategies
for	for
a	a
akst	task
by	by
ginnnru	running
adeeeprt	repeated
ailrst	trials
fo	of
eht	the
otw	two
p	p
	
it	it
apsy	pays
ot	to
cceelpry	precycle
p	p
	
aeiimmnootz	memoization
acn	can
nrtu	turn
an	an
ceeffiiinnt	inefficient
agmoprr	program
inot	into
an	an
ceeffiint	efficient
eno	one
p	p
	
it	it
is	is
efnot	often
aeeirs	easier
ot	to
adel	deal
hitw	with
ceeeefnprrs	preferences
agmno	among
cegimnopt	competing
aeeiinnoprrsttt	interpretations
fo	of
inpstu	inputs
aehrrt	rather
ahnt	than
ginrty	trying
ot	to
cilrstty	strictly
elru	rule
eno	one
aeeiinnoprrttt	interpretation
in	in
or	or
otu	out
p	p
	
cgilo	logic
agmoprrs	programs
aehv	have
a	a
eilmps	simple
awy	way
ot	to
eeprssx	express
aagmmrrs	grammars
p	p
	
adghilnn	handling
aefiinqrstu	quantifiers
in	in
aalnrtu	natural
aaeggilnu	languiage
acn	can
be	be
cikrty	tricky
p	p
	
adghilnn	handling
acdegilnnost	longdistance
cddeeeeinnps	dependencies
in	in
aalnrtu	natural
aaegglnu	language
acn	can
be	be
cikrty	tricky
p	p
	
addeginnnrstu	understanding
how	how
a	a
ceehms	scheme
eeeinprrrtt	interpreter
korsw	works
acn	can
egiv	give
ouy	you
a	a
beertt	better
aaceiinopprt	appreciation
fo	of
how	how
ilps	lisp
korsw	works
adn	and
hstu	thus
aekm	make
ouy	you
a	a
beertt	better
aegmmoprrr	programmer
p	p
	
eht	the
lrtuy	truly
aagimnz	amazing
deflnoruw	wonderful
ghint	thing
abotu	about
acccll	callcc
is	is
eht	the
abiilty	ability
ot	to
enrrtu	return
ot	to
a	a
aciinnnoottu	continuation
inopt	point
emor	more
ahnt	than
ceno	once
p	p
	
eht	the
first	first
ilps	lisp
eeeinprrrtt	interpreter
asw	was
a	a
elrstu	result
fo	of
a	a
aegmmoprrr	programmer
ggiinnor	ignoring
his	his
bosss	bosss
acdeiv	advice
p	p
	
abelnos	abelson
adn	and
amnsssu	sussman
	
is	is
abblopry	probably
eht	the
best	best
cdiinnoorttu	introduction
ot	to
cemoprtu	computer
cceeins	science
eerv	ever
einrttw	written
p	p
	
eht	the
eilmpsst	simplest
ceilmopr	compiler
deen	need
not	not
be	be
chmu	much
emor	more
celmopx	complex
ahnt	than
an	an
eeeinprrrtt	interpreter
p	p
	
an	an
aadeinorrrtxy	extraordinary
aeefrtu	feature
fo	of
ains	ansi
cmmnoo	common
ilps	lisp
is	is
eht	the
acfiilty	facility
for	for
adghilnn	handling
eorrrs	errors
p	p
	
fi	if
ouy	you
acn	can
addennrstu	understand
how	how
ot	to
eirtw	write
adn	and
ehnw	when
ot	to
esu	use
celnnooy	onceonly
ehnt	then
ouy	you
lrtuy	truly
addennrstu	understand
acmors	macros
p	p
	
a	a
dorw	word
ot	to
eht	the
eisw	wise
dnot	dont
egt	get
acdeirr	carried
aawy	away
hitw	with
acmors	macros
p	p
	
ahtw	what
ddi	did
aipp	paip
acchilmops	accomplish
as	as
an	an
aacddenv	advanced
ilps	lisp
ettx	text
aipp	paip
adnsst	stands
pu	up
ervy	very
ellw	well
eehrt	there
aer	are
illst	still
ervy	very
efw	few
ehort	other
acelps	places
ot	to
egt	get
a	a
ghhoortu	thorough
aeemnrttt	treatment
fo	of
cceeffiiny	efficiency
eisssu	issues
ilps	lisp
degins	design
eisssu	issues
adn	and
essu	uses
fo	of
acmors	macros
adn	and
ceilmoprs	compilers
for	for
acmors	macros
alpu	paul
aaghmrs	grahams
bkoos	books
aehv	have
deno	done
an	an
aceeillpsy	especially
ceeellntx	excellent
bjo	job
as	as
an	an
ai	ai
aggimmnoprr	programming
ettx	text
aipp	paip
deos	does
ellw	well
eht	the
lnoy	only
aelr	real
cegimnopt	competing
ettx	text
ot	to
eeegmr	emerge
ceelnrty	recently
is	is
bforsu	forbus
adn	and
de	de
eeklr	kleer
adn	and
ehty	they
aehv	have
a	a
emor	more
deiilmt	limited
adn	and
hstu	thus
emor	more
cdefosu	focused
adn	and
adeeginrtt	integrated
aachoppr	approach
acceginnnortt	concentrating
no	on
ceeefinnr	inference
emsssty	systems
eht	the
aachiknr	charniak
bceeikrs	riesbeck
adn	and
cdemmortt	mcdermott
bkoo	book
is	is
alos	also
illst	still
hortw	worth
giklnoo	looking
at	at
eno	one
aceghn	change
eorv	over
eht	the
alst	last
isx	six
aersy	years
is	is
ahtt	that
ai	ai
aggimmnoprr	programming
ahs	has
begnu	begun
ot	to
kloo	look
emor	more
eikl	like
aeglrru	regular
aggimmnoprr	programming
abceesu	because
a	a
ai	ai
agmoprrs	programs
eikl	like
aeglrru	regular
agmoprrs	programs
aer	are
acegiilnnrsy	increasingly
ccdeennor	concerned
hitw	with
aeglr	large
aadt	data
abess	bases
adn	and
b	b
aeglrru	regular
aegmmoprrrs	programmers
aehv	have
begnu	begun
ot	to
adderss	address
ghinst	things
chsu	such
as	as
aceghinrs	searching
eht	the
eeinnrtt	internet
adn	and
ceggiinnorz	recognizing
adghiinnrtw	handwriting
adn	and
ceehps	speech
an	an
ai	ai
aggimmnoprr	programming
ettx	text
adoty	today
dlouw	would
aehv	have
ot	to
ceorv	cover
aadt	data
abes	base
aceefinrst	interfaces
hptt	http
adn	and
ehort	other
eknortw	network
cloooprst	protocols
adeghinrt	threading
aacghilpr	graphical
aceefinrst	interfaces
adn	and
ehort	other
eisssu	issues
as	as
an	an
ai	ai
ettx	text
aipp	paip
deos	does
not	not
aefr	fare
as	as
ellw	well
it	it
eenrv	never
adeempttt	attempted
ot	to
be	be
a	a
ceeehimnoprsv	comprehensive
ai	ai
ettx	text
eginrssst	stressing
eht	the
aadgimprs	paradigms
or	or
accilsss	classics
fo	of
eht	the
defil	field
aehrrt	rather
ahnt	than
eht	the
most	most
cenrrtu	current
agmoprrs	programs
adn	and
eehiorst	theories
ahilppy	happily
eht	the
accilsss	classics
aer	are
beggiinnn	beginning
ot	to
kloo	look
beeloost	obsolete
now	now
eht	the
defil	field
dlouw	would
be	be
in	in
orrsy	sorry
aehps	shape
fi	if
ahtt	that
ddint	didnt
aehnpp	happen
aeellntuvy	eventually
for	for
a	a
emor	more
demnor	modern
aachoppr	approach
ot	to
ai	ai
efgort	forget
aipp	paip
adn	and
kloo	look
at	at
aacfiiilrt	artificial
ceeegiillnnt	intelligence
a	a
demnor	modern
aachoppr	approach
eeprt	peter
ginorv	norvig
a	a
ceeeioprrsttv	retrospective
no	on
aadgimprs	paradigms
fo	of
ai	ai
aggimmnoprr	programming
fi	if
ouy	you
acnt	cant
aehr	hear
em	me
ist	its
abceesu	because
im	im
in	in
aeeehnprsst	parentheses
	
eenstv	steven
ghirtw	wright
bceoort	october
	
it	it
ahs	has
been	been
isx	six
aersy	years
ceins	since
i	i
defhiins	finished
aadgimprs	paradigms
fo	of
ai	ai
aggimmnoprr	programming
or	or
aipp	paip
adn	and
now	now
eemss	seems
eikl	like
a	a
dgoo	good
eimt	time
ot	to
kloo	look
abck	back
at	at
how	how
ilps	lisp
adn	and
ai	ai
aggimmnoprr	programming
aehv	have
acdeghn	changed
adeptu	update
ailpr	april
	
it	it
ahs	has
now	now
been	been
eorv	over
ent	ten
aersy	years
os	so
eiv	ive
addeptu	updated
hist	this
aegp	page
is	is
ilps	lisp
illst	still
einquu	unique
or	or
at	at
aelst	least
deeffinrt	different
in	in
	
ilps	lisp
deeffor	offered
a	a
abciimnnoot	combination
fo	of
aeefrstu	features
ahtt	that
cdlou	could
not	not
be	be
dfnou	found
in	in
any	any
ehort	other
aaegglnu	language
hist	this
abciimnnoot	combination
adem	made
ilps	lisp
almost	almost
a	a
ceeinssty	necessity
for	for
aceinrt	certain
dikns	kinds
fo	of
korw	work
in	in
ai	ai
adn	and
ehort	other
aaciilnoppst	applications
adn	and
adem	made
ilps	lisp
eht	the
aaegglnu	language
fo	of
ccehio	choice
for	for
a	a
aeglr	large
cimmnotuy	community
fo	of
erssu	users
ceins	since
ehnt	then
ilps	lisp
ahs	has
aadeiimnnt	maintained
adn	and
addde	added
ot	to
aeefrstu	features
btu	but
ehort	other
aaegglnsu	languages
aehv	have
acghtu	caught
pu	up
elst	lets
kloo	look
at	at
eehhrtw	whether
ilps	lisp
is	is
illst	still
einquu	unique
or	or
at	at
aelst	least
deeffinrt	different
fmor	from
ehort	other
aaegglnsu	languages
in	in
	
no	on
p	p
	
fo	of
aipp	paip
i	i
ilst	list
eghit	eight
aimnoprtt	important
acforst	factors
ahtt	that
aekm	make
ilps	lisp
a	a
dgoo	good
aaegglnu	language
for	for
ai	ai
aaciilnoppst	applications
adn	and
adeekmrr	remarked
ahtt	that
lmosty	mostly
eehst	these
allow	allow
a	a
aegmmoprrr	programmer
ot	to
adely	delay
agikmn	making
cdeiinoss	decisions
elst	lets
kloo	look
at	at
how	how
ilps	lisp
acemoprs	compares
ot	to
asy	say
aajv	java
adn	and
hnopty	python
in	in
emrst	terms
fo	of
eehst	these
eghit	eight
acforst	factors
biilntu	builtin
opprstu	support
for	for
ilsst	lists
aajv	java
ahs	has
eht	the
ceortv	vector
epty	type
chhiw	which
allosw	allows
for	for
ceeenqssu	sequences
fo	of
aacdillmnyy	dynamically
aginrvy	varying
eghlnt	length
ilsst	lists
aer	are
beertt	better
deistu	suited
for	for
acfilnnotu	functional
aggimmnoprr	programming
btu	but
aehv	have
eht	the
aaaddeginstv	disadvantage
fo	of
aeilnr	linear
access	access
eimt	time
ehilw	while
ceorstv	vectors
aer	are
beertt	better
deistu	suited
for	for
bcdeeeijnoortt	objectoriented
aggimmnoprr	programming
btu	but
aehv	have
eht	the
aaaddeginstv	disadvantage
fo	of
aeilnr	linear
eimt	time
for	for
cdeeinnorsttuv	nondestructive
hpsu	push
opprstu	support
for	for
ceorstv	vectors
in	in
aajv	java
is	is
not	not
aelnry	nearly
as	as
ceelmopt	complete
as	as
opprstu	support
for	for
ilsst	lists
adn	and
ceeenqssu	sequences
in	in
ilps	lisp
lmosty	mostly
abceesu	because
ilps	lisp
deenorss	endorses
acfilrssst	firstclass
cfinnostu	functions
as	as
aegmnrstu	arguments
ot	to
cfinnostu	functions
aajv	java
amy	may
noos	soon
aehv	have
a	a
cceillnoot	collection
aclss	class
chhiw	which
acelns	cleans
pu	up
emos	some
fo	of
eht	the
aflstu	faults
hitw	with
aeemnorrstu	enumerators
ceorstv	vectors
adn	and
aabehhlsst	hashtables
hnopty	python
oot	too
ahs	has
a	a
ceortv	vector
aclss	class
chhiw	which
it	it
aclls	calls
ilst	list
adn	and
hnopsty	pythons
opprstu	support
is	is
aiilmrs	similar
ot	to
ilpss	lisps
aacimottu	automatic
aegorst	storage
aaeegmmnnt	management
aajv	java
adn	and
hnopty	python
opprstu	support
hist	this
ilps	lisp
aeeiilmmnnopstt	implementations
dent	tend
ot	to
be	be
emor	more
aemrtu	mature
adn	and
efmoprr	perform
beertt	better
acdimny	dynamic
ginpty	typing
aajv	java
aacehstt	attaches
eimnrtu	runtime
epty	type
afiimnnoort	information
ot	to
aceinnsst	instances
fo	of
eht	the
aclss	class
bcejot	object
btu	but
not	not
ot	to
eiiimprtv	primitive
aadt	data
eeelmnst	elements
eehorvw	however
aajv	java
eeiqrrsu	requires
a	a
epty	type
aacdeilnort	declaration
for	for
eervy	every
aabeilrv	variable
hist	this
ahs	has
emos	some
aaadegnstv	advantages
for	for
cdinooprtu	production
cdeo	code
btu	but
ahs	has
aaaddeginsstv	disadvantages
for	for
adipr	rapid
ginoopprtty	prototyping
adn	and
eilnootuv	evolution
fo	of
agmoprrs	programs
aajv	java
deos	does
not	not
aehv	have
a	a
aceeeegilmnprtt	generictemplate
emssty	system
ahtt	that
dlouw	would
allow	allow
epsty	types
efil	life
ceginorrsttv	vectorstring
adn	and
effrssu	suffers
aeglrty	greatly
abceesu	because
fo	of
it	it
hnopsty	pythons
bcejot	object
delmo	model
is	is
eht	the
aems	same
as	as
ilpss	lisps
btu	but
hnopty	python
deos	does
not	not
allow	allow
ailnoopt	optional
epty	type
aacdeilnorst	declarations
as	as
ilps	lisp
deos	does
acfilrssst	firstclass
cfinnostu	functions
aajv	java
ahs	has
amnnoosuy	anonymous
acelsss	classes
chhiw	which
eersv	serve
emos	some
fo	of
eht	the
eopprssu	purposes
fo	of
celorssu	closures
aghhlotu	although
in	in
a	a
elss	less
aeeilrstv	versatile
awy	way
hitw	with
a	a
emor	more
clmsuy	clumsy
anstxy	syntax
in	in
ilps	lisp
ew	we
acn	can
asy	say
aabdlm	lambda
x	x
f	f
g	g
x	x
eehrw	where
in	in
aajv	java
ew	we
dlouw	would
aehv	have
ot	to
asy	say
enw	new
acfinnnortuuy	unaryfunction
	
bcilpu	public
bcejot	object
bcceeeejottux	executeobject
x	x
	
enrrtu	return
acst	cast
fgx	xgf
	
	
eehrw	where
acst	cast
is	is
eht	the
aelr	real
epty	type
fo	of
x	x
hist	this
dlouw	would
lnoy	only
korw	work
hitw	with
acelsss	classes
ahtt	that
beeorsv	observe
eht	the
acfinnnortuuy	unaryfunction
aceefinrt	interface
chhiw	which
cemos	comes
fmor	from
gjl	jgl
adn	and
is	is
not	not
biilntu	builtin
ot	to
aajv	java
hnopty	python
as	as
fo	of
einorsv	version
	
opprsstu	supports
acfilrssst	firstclass
cfinnostu	functions
almost	almost
as	as
ellw	well
as	as
ilps	lisp
ouy	you
dlouw	would
eirtw	write
aabdlm	lambda
x	x
fgx	fgx
eht	the
lnoy	only
aabcdkrw	drawback
is	is
ahtt	that
cdeeloorsv	closedover
aabeilrsv	variables
aer	are
adelnory	readonly
fimnoru	uniform
anstxy	syntax
aajv	java
anstxy	syntax
is	is
fo	of
deimmu	medium
ceilmoptxy	complexity
aceilnrty	certainly
emor	more
celmopx	complex
ahnt	than
ilps	lisp
aajv	java
deos	does
not	not
aceegnoru	encourage
or	or
eenv	even
eimprt	permit
acmors	macros
eht	the
djk	jdk
ceilmoprs	compilers
aer	are
alos	also
aehrrt	rather
ehilost	hostile
ot	to
acdeeeegmnoprrttu	computergenerated
cdeo	code
ghinst	things
chhiw	which
dhlosu	should
be	be
aginnrsw	warnings
eikl	like
aabceehlnru	unreachable
cdeo	code
aer	are
eorrrs	errors
hist	this
is	is
aehmostw	somewhat
efhllpu	helpful
for	for
aehimnnrttuw	humanwritten
cdeo	code
btu	but
is	is
jstu	just
dghinortw	downright
aginnnoy	annoying
for	for
acdeeeegmnoprrttu	computergenerated
cdeo	code
emos	some
aeefrstu	features
fo	of
eht	the
aaegglnu	language
eikl	like
eht	the
elrsu	rules
for	for
ehnw	when
ouy	you
acn	can
aehv	have
a	a
aabeilrv	variable
fo	of
eht	the
aems	same
aemn	name
acddeelr	declared
alos	also
aekm	make
it	it
adhr	hard
ot	to
aeeegnrt	generate
cdeo	code
hnopty	python
anstxy	syntax
is	is
aehmostw	somewhat
eilmprs	simpler
ahnt	than
aajv	java
adn	and
eht	the
ceeenprs	presence
fo	of
aelv	eval
aekms	makes
it	it
abeefils	feasible
ot	to
aeeegnrt	generate
cdeo	code
at	at
eimnrtu	runtime
btu	but
eht	the
ackl	lack
fo	of
a	a
acmor	macro
emssty	system
aekms	makes
it	it
emor	more
deiostu	tedious
ahnt	than
in	in
ilps	lisp
aceeiinrttv	interactive
eeimnnnortv	environment
emos	some
aajv	java
eeimnnnorstv	environments
allow	allow
eiikllps	lisplike
aeefrstu	features
chsu	such
as	as
an	an
aceegiinrttv	intgeractive
acdmmno	command
loop	loop
adn	and
adfinopstx	stopandfix
bdeggginu	debugging
ilps	lisp
eeimnnnorstv	environments
aer	are
illst	still
aadeh	ahead
btu	but
ahtt	that
abblopry	probably
notw	wont
alst	last
glno	long
bejlu	bluej
in	in
aacilprrtu	particular
ahs	has
most	most
fo	of
eht	the
ajmor	major
aeefrstu	features
fo	of
a	a
dgoo	good
ilps	lisp
eeimnnnortv	environment
ouy	you
acn	can
ceeilmopr	recompile
a	a
dehmot	method
inot	into
a	a
ginnnru	running
agmoprr	program
adn	and
ouy	you
acn	can
epty	type
in	in
an	an
eeinoprssx	expression
adn	and
aehv	have
it	it
aadeeltuv	evaluated
adeeiilmmty	immediately
it	it
is	is
ddeeinnt	intended
for	for
aceghint	teaching
eopprssu	purposes
adn	and
i	i
acnt	cant
ellt	tell
fi	if
it	it
is	is
abeilstu	suitable
for	for
cdinooprtu	production
esu	use
hnopty	python
ahs	has
eht	the
aems	same
aceeiinrttv	interactive
aachoppr	approach
as	as
ilps	lisp
btu	but
eht	the
eeimnnnortv	environment
is	is
elss	less
aemrtu	mature
ahnt	than
ilpss	lisps
beeiiilnsttxy	extensibility
hist	this
amy	may
eoprv	prove
ot	to
be	be
aajsv	javas
aekw	weak
inopt	point
aajv	java
korsw	works
ellw	well
as	as
glno	long
as	as
ouy	you
aer	are
giillnw	willing
ot	to
aekm	make
eeghinrtvy	everything
a	a
aclss	class
fi	if
eghimnost	something
enw	new
eikl	like
asy	say
acdeeeinoprstt	aspectoriented
aggimmnoprr	programming
aekst	takes
ffo	off
ilps	lisp
dlouw	would
be	be
abel	able
ot	to
aceinooprrt	incorporate
it	it
hitw	with
acmors	macros
btu	but
aajv	java
dlouw	would
not	not
hiorsty	history
ilps	lisp
ahs	has
eorv	over
	
aersy	years
fo	of
hiorsty	history
aajv	java
ahs	has
	
hnopty	python
	
eno	one
emor	more
aimnoprtt	important
aeefrtu	feature
ahtt	that
ddint	didnt
aekm	make
hist	this
ilst	list
is	is
cceeffiiny	efficiency
ilps	lisp
is	is
abotu	about
	
ot	to
	
eimst	times
aefrst	faster
ahnt	than
aajv	java
adn	and
abotu	about
	
ot	to
	
eimst	times
aefrst	faster
ahnt	than
hnopty	python
ilps	lisp
is	is
abblopry	probably
hiintw	within
	
ot	to
	
fo	of
cc	cc
in	in
cceeffiiny	efficiency
no	on
most	most
aksst	tasks
chhiw	which
is	is
celos	close
eghnou	enough
ahtt	that
eht	the
cdeeeffinrs	differences
ddeenp	depend
emor	more
no	on
eht	the
aegmmoprrrs	programmers
deilnovv	involved
ahnt	than
eht	the
aaegglnu	language
adn	and
celos	close
eghnou	enough
ahtt	that
for	for
most	most
aaciilnoppst	applications
ahtt	that
deeps	speed
is	is
not	not
an	an
eissu	issue
for	for
ilps	lisp
ouy	you
illw	will
deen	need
ot	to
cdeo	code
aceinrt	certain
ghinst	things
aacillprrtuy	particularly
giilnnovv	involving
emmory	memory
aaeegmmnnt	management
ginsu	using
eht	the
ceehinqstu	techniques
in	in
eht	the
bkoo	book
chsu	such
as	as
emmory	memory
ceeorrssu	resources
hist	this
is	is
emor	more
korw	work
for	for
eht	the
aegmmoprrr	programmer
btu	but
is	is
o	o
deeffinrt	different
fmor	from
ahtw	what
c	c
effors	offers
hitw	with
lst	stl
aaclloorst	allocators
hnopty	python
is	is
a	a
deeffinrt	different
orsty	story
eehrt	there
is	is
a	a
aeglr	large
aclss	class
fo	of
belmoprs	problems
for	for
chhiw	which
hnopty	python
is	is
oot	too
losw	slow
ist	its
adhr	hard
ot	to
egt	get
abcehkmnr	benchmark
aadt	data
ahtt	that
is	is
eeelnrtv	relevent
ot	to
oruy	your
est	set
fo	of
aaciilnoppst	applications
btu	but
eehrs	heres
emos	some
aadt	data
aeeilrtv	relative
deepss	speeds
fo	of
	
aaegglnsu	languages
no	on
	
abcehkmnrs	benchmarks
fmor	from
eht	the
aegrt	great
cemoprtu	computer
aaegglnu	language
hooosttu	shootout
deepss	speeds
aer	are
adeilmnorz	normalized
os	so
eht	the
g	g
ceilmopr	compiler
for	for
c	c
is	is
	
os	so
	
aemns	means
ceitw	twice
as	as
losw	slow
	
aemns	means
	
eimst	times
aefrst	faster
abcdgknoru	background
cloors	colors
aer	are
cddeo	coded
accdginor	according
ot	to
deegln	legend
no	on
ghirt	right
eht	the
alst	last
eiln	line
aeeimsstt	estimates
eht	the
	
ot	to
	
aeilqrstu	quartiles
by	by
ghinortw	throwing
otu	out
eht	the
bmoott	bottom
otw	two
adn	and
opt	top
otw	two
ceorss	scores
for	for
aceh	each
aaegglnu	language
estt	test
ilps	lisp
aajv	java
hnopty	python
elpr	perl
c	c
ceeinoptx	exception
adghilnn	handling
	
	
	
	
	
ahhs	hash
access	access
	
	
	
	
	
msu	sum
bemnrsu	numbers
fmor	from
efil	file
	
	
	
	
	
	
x	x
c	c
eeerrsv	reverse
eilns	lines
	
	
	
	
	
	
x	x
c	c
aimrtx	matrix
aciiillmnopttu	multiplication
	
	
	
	
	
	
x	x
c	c
aehoprst	heapsort
	
	
	
	
	
	
x	x
c	c
aarry	array
access	access
	
	
	
	
	
	
x	x
c	c
ilst	list
ceginoprss	processing
	
	
	
	
	
	
x	x
c	c
bcejot	object
aaiiinnnosttt	instantiation
	
	
	
	
	
dorw	word
cnotu	count
	
	
	
	
	
	
ot	to
	
	
ot	to
	
	
ot	to
	
	
ot	to
	
	
ot	to
	
	
ot	to
	
aellorv	overall
ilps	lisp
deos	does
ervy	very
ellw	well
no	on
eht	the
einn	nine
aeefrstu	features
aennoy	anyone
agikmn	making
an	an
bceeijotv	objective
ccehio	choice
abdes	based
no	on
eehst	these
aeefrstu	features
dlouw	would
ceinnotu	continue
ot	to
dfin	find
ilps	lisp
eht	the
best	best
ccehio	choice
for	for
a	a
deiw	wide
aegnr	range
fo	of
aaciilnoppst	applications
btu	but
eehrt	there
aer	are
now	now
abeilv	viable
cdeennorst	contenders
ahtt	that
ddi	did
not	not
eistx	exist
in	in
	
is	is
ilps	lisp
alnoppruu	unpopular
now	now
eno	one
cciiimrst	criticism
fo	of
ilps	lisp
is	is
ahtt	that
it	it
is	is
not	not
as	as
aloppru	popular
as	as
ehort	other
aaegglnsu	languages
adn	and
hstu	thus
ahs	has
a	a
aellmrs	smaller
cimmnotuy	community
fo	of
erssu	users
adn	and
elss	less
deeelmnoptv	development
aciittvy	activity
adnoru	around
it	it
eht	the
aijmorty	majority
fo	of
eht	the
dinrstuy	industry
abblopry	probably
eefls	feels
ahtt	that
ilps	lisp
ahs	has
bceemo	become
elss	less
aeelnrtv	relevant
adn	and
ahtt	that
aajv	java
is	is
agiknt	taking
eorv	over
as	as
eht	the
aaegglnu	language
fo	of
ccehio	choice
my	my
ceeinopprt	perception
in	in
	
asw	was
ahtt	that
ilps	lisp
adh	had
dehl	held
no	on
ot	to
most	most
fo	of
ist	its
affhiltu	faithful
erssu	users
adn	and
addde	added
emos	some
enw	new
enos	ones
ehilw	while
ddeein	indeed
chmu	much
fo	of
eht	the
erst	rest
fo	of
eht	the
dlorw	world
adh	had
dehrsu	rushed
first	first
ot	to
c	c
adn	and
ehnt	then
ot	to
aajv	java
chhiw	which
is	is
accghint	catching
pu	up
afst	fast
btu	but
c	c
illst	still
dhlos	holds
a	a
bgi	big
adel	lead
hstu	thus
ilps	lisp
asw	was
in	in
a	a
abelst	stable
abelostu	absolute
iinoopst	position
btu	but
a	a
aeekrw	weaker
aeeilrtv	relative
iinoopst	position
abceesu	because
fo	of
eht	the
acdeeinrs	increased
opprstu	support
for	for
eht	the
aijmorty	majority
aaegglnsu	languages
c	c
adn	and
aajv	java
adn	and
elss	less
aaccceenpt	acceptance
fo	of
a	a
deiw	wide
aegnr	range
fo	of
aaegglnsu	languages
eht	the
ajmor	major
ilps	lisp
denorsv	vendors
aehilnqru	harlequin
for	for
hmow	whom
i	i
dekorw	worked
for	for
otw	two
aersy	years
adn	and
afnrz	franz
eerw	were
at	at
ahtt	that
eimt	time
eginoprrt	reporting
adesty	steady
acegiinnrs	increasing
aelss	sales
i	i
anstw	wasnt
os	so
ersu	sure
abotu	about
dgiiloot	digitool
ehty	they
aekm	make
a	a
efin	fine
cdoprtu	product
btu	but
it	it
is	is
acm	mac
lnoy	only
adn	and
eht	the
acm	mac
is	is
adilpry	rapidly
gilnos	losing
aekmrt	market
aehrs	share
abemy	maybe
ehty	they
illw	will
cemo	come
abck	back
egnorrst	stronger
no	on
eht	the
eehls	heels
fo	of
os	os
x	x
ilps	lisp
asw	was
illst	still
begin	being
demooprt	promoted
in	in
a	a
eklowy	lowkey
awy	way
by	by
behilprssu	publishers
adn	and
bdeiirrssttu	distributers
eikl	like
aamnoz	amazon
ilps	lisp
ceinnostu	continues
ot	to
ejnoy	enjoy
cekopst	pockets
fo	of
acceilmmor	commercial
ccesssu	success
alpu	paul
aaghmr	graham
ceelnrty	recently
dlos	sold
a	a
ilps	lisp
agmoprr	program
adn	and
eht	the
acmnopy	company
adnoru	around
it	it
ot	to
ahooy	yahoo
for	for
	
iillmno	million
it	it
asw	was
an	an
aghinortu	authoring
loot	tool
for	for
eilnno	online
eorsst	stores
biortz	orbitz
eno	one
fo	of
eht	the
adegiln	leading
aelrtv	travel
cceeemmor	ecommerce
eisst	sites
deos	does
cdeehlsu	schedule
aiiimnoopttz	optimization
ginsu	using
a	a
ilps	lisp
emssty	system
deilppsu	supplied
by	by
aclr	carl
de	de
acekmnrs	marckens
acmnopy	company
ait	ita
aeforstw	software
eht	the
chlptt	clhttp
bew	web
eerrsv	server
is	is
in	in
deiw	wide
esu	use
emos	some
fo	of
eht	the
best	best
korw	work
in	in
abcfiiimnoorst	bioinformatics
is	is
deno	done
in	in
ilps	lisp
for	for
emor	more
aeelmpsx	examples
ees	see
eht	the
afnrz	franz
bew	web
eist	site
eht	the
ciikl	cliki
deinx	index
ilsst	lists
cmmnoo	common
ilps	lisp
ceeorrssu	resources
btu	but
ehty	they
aer	are
not	not
all	all
abeloprt	portable
acorss	across
cl	cl
aeeiilmmnnopstt	implementations
eht	the
ilnux	linux
eeklwy	weekly
ensw	news
eht	the
enop	open
cdeiorrty	directory
enrty	entry
for	for
ilps	lisp
eht	the
acgillmnopps	complanglisp
egnoprsuw	newsgroup
in	in
	
eht	the
adgnr	grand
ehops	hopes
for	for
aajv	java
aehv	have
not	not
adennp	panned
otu	out
aajv	java
ejnosy	enjoys
aegrt	great
ailopprtuy	popularity
in	in
eht	the
eeeinprrst	enterprise
aceps	space
btu	but
ahs	has
not	not
aeknt	taken
eorv	over
as	as
a	a
aeeglnr	general
eopprsu	purpose
adipr	rapid
deeelmnoptv	development
aaegglnu	language
nor	nor
as	as
an	an
ceeffiint	efficient
emsssty	systems
aaegglnu	language
aceefmnoprr	performance
fo	of
aajv	java
aeimnrs	remains
adilms	dismal
ehnw	when
acdemopr	compared
ot	to
c	c
or	or
ot	to
ilps	lisp
im	im
not	not
ersu	sure
hwy	why
ahtt	that
is	is
nsu	sun
aceilnrty	certainly
ahs	has
adh	had
eghnou	enough
eimt	time
adn	and
ceeorrssu	resources
ot	to
eeilmmnpt	implement
a	a
beertt	better
emssty	system
abemy	maybe
ehty	they
dhlosu	should
aehv	have
dehir	hired
emor	more
ceeeiiillmopprrrsstwx	exlispcompilerwriters
defr	fred
bkoors	brooks
is	is
deeoprrt	reported
ot	to
aehv	have
adis	said
emor	more
erssu	users
dfin	find
emor	more
bgsu	bugs
i	i
dnot	dont
hiknt	think
ahstt	thats
a	a
belmopr	problem
for	for
ilps	lisp
ilps	lisp
ahs	has
adh	had
eghnou	enough
aeerrssuy	useryears
ahtt	that
it	it
is	is
emor	more
abelst	stable
ahnt	than
eht	the
ehort	other
aaegglnsu	languages
ew	we
illw	will
cdisssu	discuss
eehr	here
btu	but
eht	the
aiinosttu	situation
for	for
ilps	lisp
in	in
emrst	terms
fo	of
ailopprtuy	popularity
illst	still
aeelrsv	reveals
a	a
aeeknssw	weakness
eht	the
aaegglnu	language
aaddnrst	standard
ahs	has
aadegnstt	stagnated
hiottuw	without
addeginrss	addressing
emos	some
eky	key
eisssu	issues
eikl	like
adeghinrt	threading
cekosst	sockets
adn	and
ehorst	others
eefhmorrrtu	furthermore
eehrt	there
is	is
no	no
ekllnnoww	wellknown
aaddnrst	standard
eiooprrsty	repository
fo	of
abeiilrrs	libraries
for	for
enw	new
cloooprst	protocols
eikl	like
hptt	http
hlmt	html
lmx	xml
aops	soap
cet	etc
addiiilnuv	individual
aeeiilmmnnopstt	implementations
add	add
abeiilrrs	libraries
for	for
eehst	these
adn	and
addiiilnuv	individual
aegmmoprrrs	programmers
aceert	create
ceenooprsu	opensource
aeeiilmmnnopstt	implementations
btu	but
ouy	you
dnot	dont
egt	get
ehmt	them
ghirt	right
otu	out
fo	of
eht	the
box	box
eikl	like
ouy	you
do	do
hitw	with
aajv	java
or	or
hnopty	python
nor	nor
acn	can
ouy	you
dfin	find
ehmt	them
at	at
a	a
egilns	single
acilnoot	location
eikl	like
elprs	perls
acnp	cpan
hist	this
aemns	means
ahtt	that
it	it
aekst	takes
emor	more
korw	work
ot	to
hntu	hunt
eehst	these
abeiilrrs	libraries
dnow	down
adn	and
emos	some
aegmmoprrrs	programmers
diimsss	dismiss
ilps	lisp
for	for
a	a
cejoprt	project
abceesu	because
ehty	they
dnot	dont
adeeiilmmty	immediately
dfin	find
eht	the
abeiilrrs	libraries
ehty	they
deen	need
c	c
afillny	finally
ahs	has
eht	the
aaddnrst	standard
aeelmptt	template
abilrry	library
chhiw	which
aeimnrs	remains
chmu	much
adehrr	harder
ot	to
esu	use
ahnt	than
ilpss	lisps
ceeenqsu	sequence
cfinnostu	functions
btu	but
is	is
aabcelp	capable
fo	of
aegrt	great
aceefmnoprr	performance
in	in
eht	the
adhns	hands
fo	of
adirwz	wizard
lst	stl
aegmmoprrrs	programmers
adn	and
fo	of
aegrt	great
aacdeehhs	headaches
in	in
eht	the
adhns	hands
fo	of
aaeegrv	average
aegmmoprrrs	programmers
ilps	lisp
eeprstx	experts
aer	are
illst	still
as	as
cdeioprtuv	productive
as	as
eerv	ever
btu	but
eenrw	newer
aegmmoprrrs	programmers
aer	are
elss	less
eiklly	likely
ot	to
cikp	pick
pu	up
ilps	lisp
cdeinors	consider
eht	the
fgillnoow	following
aeemrssu	measures
fo	of
aaegglnu	language
ailopprtuy	popularity
in	in
	
i	i
dekloo	looked
at	at
	
aaegglnsu	languages
in	in
	
i	i
adenorrw	narrowed
eht	the
defil	field
ot	to
	
	
aaegglnu	language
bkoos	books
eenstu	usenet
aceilrst	articles
ceenrt	recent
aceilrst	articles
lrsu	urls
bjos	jobs
agv	avg
aknr	rank
c	c
	
	
	
	
	
	
aajv	java
	
	
	
	
	
	
all	all
ilpss	lisps
	
	
	
	
	
	
elpr	perl
	
	
	
	
	
	
aaklllmst	smalltalk
	
	
	
	
	
	
ilps	lisp
	
	
	
	
	
	
gloopr	prolog
	
	
	
	
	
	
eeffil	eiffel
	
	
	
	
	
	
ceehms	scheme
	
	
	
	
	
	
adlny	dylan
	
	
	
	
	
	
for	for
	
cemoprtu	computer
aaegglnsu	languages
hist	this
achrt	chart
aeimmrssuz	summarizes
eht	the
bemnru	number
fo	of
bkoos	books
deeffor	offered
at	at
aamnoz	amazon
eht	the
bemnru	number
fo	of
acdehirv	archived
adn	and
ceenrt	recent
ensw	news
aceilrst	articles
in	in
acglmnop	complang
at	at
adeejnsw	dejanews
eht	the
bemnru	number
fo	of
hist	hits
no	on
eht	the
eqruy	query
aaegglnu	language
cemoprtu	computer
at	at
eefiknos	infoseek
adn	and
eht	the
bemnru	number
fo	of
bjos	jobs
deeffor	offered
at	at
ceehstw	westech
eht	the
cemoprtu	computer
is	is
desu	used
abceesu	because
amny	many
fo	of
eht	the
aaegglnu	language
aemns	names
aer	are
abgimosuu	ambiguous
eeffil	eiffel
eortw	tower
aajv	java
diknr	drink
all	all
ilpss	lisps
aemns	means
acdeehillmnpssy	lispschemedylan
ilps	lisp
is	is
acellry	clearly
bdehin	behind
c	c
adn	and
aajv	java
btu	but
at	at
aelst	least
in	in
eht	the
aabkllpr	ballpark
for	for
all	all
aeemrssu	measures
ceeptx	except
bjos	jobs
ilps	lisp
is	is
ghillsty	slightly
aadeh	ahead
fo	of
elpr	perl
abegint	beating
it	it
in	in
	
fo	of
	
aeemrssu	measures
	
aaegglnu	language
bkoos	books
eenstu	usenet
aceilrst	articles
lrsu	urls
bjos	jobs
agv	avg
aknr	rank
aajv	java
	
	
	
	
	
c	c
	
	
	
	
	
elpr	perl
	
	
	
	
	
hnopty	python
	
	
	
	
	
ilps	lisp
	
	
	
	
	
for	for
	
cemoprtu	computer
aaegglnsu	languages
hist	this
achrt	chart
aeimmrssuz	summarizes
eht	the
bemnru	number
fo	of
bkoos	books
deeffor	offered
at	at
aamnoz	amazon
eht	the
bemnru	number
fo	of
ensw	news
aceilrst	articles
in	in
acglmnop	complang
at	at
eggloo	google
goprsu	groups
eht	the
bemnru	number
fo	of
hist	hits
no	on
eht	the
eqruy	query
aaegglnu	language
cemoprtu	computer
at	at
eggloo	google
adn	and
eht	the
bemnru	number
fo	of
bjos	jobs
deeffor	offered
at	at
cemmnoorst	monstercom
aacgilnnoorsttu	congratulations
ot	to
aamnoz	amazon
for	for
begin	being
eht	the
lnoy	only
eno	one
ot	to
aeimnr	remain
eht	the
deefiiintv	definitive
aacdeeeglorrty	categoryleader
for	for
efiv	five
aersy	years
aajv	java
ahs	has
now	now
demov	moved
aadeh	ahead
fo	of
c	c
in	in
ailopprtuy	popularity
elpr	perl
ahs	has
demov	moved
pu	up
ot	to
eehrw	where
it	it
is	is
aelnry	nearly
ceeiimopttv	competitive
hitw	with
eht	the
bgi	big
otw	two
adn	and
ilps	lisp
ahs	has
demov	moved
dnow	down
now	now
abegin	beaing
an	an
deorr	order
fo	of
adegimntu	magnitude
bdehin	behind
eht	the
ehorst	others
in	in
most	most
aceegiorst	categories
hnopty	python
deegs	edges
otu	out
ilps	lisp
in	in
	
fo	of
	
aceegiorst	categories
eehst	these
aeeemmnrsstu	measurements
aer	are
eprtty	pretty
ccefiiinnstu	unscientific
adn	and
amy	may
not	not
aemn	mean
chmu	much
aefrt	after
i	i
ddi	did
ehmt	them
i	i
abceem	became
aaerw	aware
fo	of
aehnort	another
dstuy	study
deno	done
by	by
beiot	tiobe
aeforstw	software
ahtt	that
ahs	has
aajv	java
bemnru	number
	
c	c
adn	and
c	c
at	at
	
	
adn	and
ilps	lisp
at	at
	
hitw	with
a	a
aekmrt	market
aehrs	share
ht	th
fo	of
aajv	java
aloppru	popular
deos	does
not	not
aemn	mean
beertt	better
adn	and
eehst	these
bemnrsu	numbers
amy	may
not	not
aceelorrt	correlate
ceeflprty	perfectly
hitw	with
ailopprtuy	popularity
btu	but
ehty	they
do	do
asy	say
eghimnost	something
is	is
ilps	lisp
at	at
aelst	least
aloppru	popular
for	for
ai	ai
in	in
	
adn	and
	
eht	the
aenrsw	answer
asw	was
acellry	clearly
esy	yes
btu	but
in	in
	
eht	the
aenrsw	answer
is	is
elss	less
acelr	clear
cdeinors	consider
eht	the
bemnru	number
fo	of
elrsstu	results
for	for
eht	the
fgillnoow	following
eggloo	google
aceehrss	searches
acehrs	search
bemnru	number
fo	of
elrsstu	results
acehrs	search
bemnru	number
fo	of
elrsstu	results
aajv	java
ai	ai
	
aajv	java
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
c	c
ai	ai
	
c	c
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
ilps	lisp
ai	ai
	
ilps	lisp
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
elpr	perl
ai	ai
	
elpr	perl
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
hnopty	python
ai	ai
	
hnopty	python
aacfiiilrt	artificial
ceeegiillnnt	intelligence
	
it	it
ahs	has
been	been
bioosuv	obvious
ot	to
most	most
beeorrssv	observers
ahtt	that
eht	the
acehimn	machine
aegilnnr	learning
cimmnotuy	community
in	in
aacilprrtu	particular
ahs	has
demov	moved
aawy	away
fmor	from
ilps	lisp
adorstw	towards
c	c
or	or
ot	to
acdeeiilpsz	specialized
aaacehilmmtt	mathematical
aacegkps	packages
eikl	like
aablmt	matlab
btu	but
im	im
aaclltuy	actually
deiprrssu	surprised
ahtt	that
eht	the
denrt	trend
ahs	has
egno	gone
hist	this
afr	far
adn	and
im	im
ervy	very
deiprrssu	surprised
ot	to
ees	see
aajv	java
no	on
opt	top
abceesu	because
i	i
jstu	just
aehntv	havent
eens	seen
ahtt	that
chmu	much
chnooptt	topnotch
aajv	java
ai	ai
cdeo	code
im	im
alos	also
aademz	amazed
ahtt	that
elpr	perl
ai	ai
aeprssssu	surpasses
ilps	lisp
ai	ai
btu	but
i	i
cepsstu	suspect
ahtt	that
eehrst	theres
emos	some
ehort	other
aegimnn	meaning
fo	of
ai	ai
in	in
eht	the
elpr	perl
dlorw	world
abceesu	because
elpr	perl
aacfiiilrt	artificial
ceeegiillnnt	intelligence
is	is
ellw	well
bdehin	behind
ilps	lisp
aacfiiilrt	artificial
ceeegiillnnt	intelligence
enw	new
ilps	lisp
bkoos	books
eht	the
best	best
in	in
my	my
iinnoop	opinion
aer	are
alpu	paul
aaghmrs	grahams
no	on
ilps	lisp
adn	and
ains	ansi
cmmnoo	common
ilps	lisp
abblopry	probably
eht	the
best	best
bkoo	book
eerv	ever
no	on
how	how
ot	to
eirtw	write
ilps	lisp
ceilmoprs	compilers
adn	and
eeeinprrrstt	interpreters
is	is
achiinrst	christian
ceeinnqsu	queinnecs
ilps	lisp
in	in
allms	small
ceeips	pieces
in	in
eht	the
ceehms	scheme
dlorw	world
abelnos	abelson
adn	and
amnsssu	sussman
aehv	have
a	a
enw	new
deiinot	edition
fo	of
cerrsttuu	structure
adn	and
aeeiinnoprrttt	interpretation
fo	of
cemoprtu	computer
agmoprrs	programs
adn	and
adeiln	daniel
adefimnr	friedman
ahs	has
a	a
enw	new
einorsv	version
fo	of
eht	the
eilltt	little
eilprs	lisper
acdell	called
eht	the
adeenoss	seasoned
ceehmrs	schemer
eehnpst	stephen
adels	slade
ahs	has
a	a
enw	new
bkoo	book
chhiw	which
i	i
aehv	have
not	not
adh	had
a	a
accehn	chance
ot	to
ader	read
ety	yet
ahtw	what
elnosss	lessons
aer	are
in	in
aipp	paip
eehr	here
is	is
my	my
ilst	list
fo	of
eht	the
	
most	most
aimnoprtt	important
elnosss	lessons
in	in
aipp	paip
esu	use
amnnoosuy	anonymous
cfinnostu	functions
p	p
	
aceert	create
enw	new
cfinnostu	functions
celorssu	closures
at	at
nru	run
eimt	time
p	p
	
esu	use
eht	the
most	most
aalnrtu	natural
ainnoott	notation
aaabeillv	available
ot	to
elosv	solve
a	a
belmopr	problem
p	p
	
esu	use
eht	the
aems	same
aadt	data
for	for
aeelrsv	several
agmoprrs	programs
p	p
	
be	be
ccefiips	specific
esu	use
aabcinorsstt	abstractions
be	be
cceinos	concise
esu	use
eht	the
ddeioprv	provided
loost	tools
dnot	dont
be	be
bceorsu	obscure
be	be
ceinnosstt	consistent
p	p
	
esu	use
acmors	macros
fi	if
aellry	really
aceenrssy	necessary
p	p
	
eehrt	there
aer	are
	
or	or
	
ajmor	major
aadt	data
epsty	types
aaefiiilmrz	familiarize
eflorsuy	yourself
hitw	with
ehmt	them
p	p
	
eeehnrvw	whenever
ouy	you
deelopv	develop
a	a
celmopx	complex
aadt	data
cerrsttuu	structure
deelopv	develop
a	a
cdeginnooprrs	corresponding
cceinnossty	consistency
cceehkr	checker
p	p
	
ot	to
elosv	solve
a	a
belmopr	problem
bcdeeirs	describe
it	it
cefipsy	specify
it	it
in	in
acghiilmort	algorithmic
emrst	terms
eeilmmnpt	implement
it	it
estt	test
it	it
bdegu	debug
adn	and
aaelnyz	analyze
it	it
ceeptx	expect
hist	this
ot	to
be	be
an	an
aeeiirttv	iterative
ceoprss	process
p	p
	
ai	ai
aggimmnoprr	programming
is	is
aegllry	largely
aelooprrtxy	exploratory
aggimmnoprr	programming
eht	the
aim	aim
is	is
efnot	often
ot	to
cdeiorsv	discover
emor	more
abotu	about
eht	the
belmopr	problem
aaer	area
p	p
	
a	a
aeeglnr	general
belmopr	problem
elorsv	solver
dhlosu	should
be	be
abel	able
ot	to
elosv	solve
deeffinrt	different
belmoprs	problems
p	p
	
ew	we
mstu	must
eirsst	resist
eht	the
aeimnopttt	temptation
ot	to
beeilv	belive
ahtt	that
all	all
ghiiknnt	thinking
flloosw	follows
eht	the
aacilmnoopttu	computational
delmo	model
p	p
	
eht	the
aimn	main
bcejot	object
fo	of
hist	this
bkoo	book
is	is
ot	to
acesu	cause
eht	the
adeerr	reader
ot	to
asy	say
ot	to
him	him
or	or
eefhlrs	herself
i	i
cdlou	could
aehv	have
einrttw	written
ahtt	that
p	p
	
fi	if
ew	we
eflt	left
otu	out
eht	the
mopprt	prompt
ew	we
cdlou	could
eirtw	write
a	a
ceelmopt	complete
ilps	lisp
eeeinprrrtt	interpreter
ginsu	using
jstu	just
foru	four
blmossy	symbols
cdeinors	consider
ahtw	what
ew	we
dlouw	would
aehv	have
ot	to
do	do
ot	to
eirtw	write
a	a
ilps	lisp
or	or
aaclps	pascal
or	or
aajv	java
eeeinprrrtt	interpreter
in	in
aaclps	pascal
or	or
aajv	java
p	p
	
degins	design
aenprstt	patterns
acn	can
be	be
desu	used
afillmnory	informally
or	or
acn	can
be	be
aabcderstt	abstracted
inot	into
a	a
aflmor	formal
cfinnotu	function
acmor	macro
or	or
aadt	data
epty	type
efnot	often
giilnnovv	involving
deeghhiorrr	higherorder
cfinnostu	functions
p	p
	
esu	use
aaddeinrtv	datadriven
aggimmnoprr	programming
eehrw	where
aaceinnoprttt	patternaction
aiprs	pairs
aer	are
deorst	stored
in	in
a	a
abelt	table
p	p
	
eeimmosst	sometimes
emor	more
is	is
elss	less
ist	its
aeeirs	easier
ot	to
cdeopru	produce
emor	more
opttuu	output
ahnt	than
jstu	just
eht	the
ghirt	right
opttuu	output
p	p
	
ilps	lisp
is	is
not	not
eehilnnrty	inherently
elss	less
ceeffiint	efficient
ahnt	than
ehort	other
eeghhillv	highlevel
aaegglnsu	languages
	
acdhirr	richard
aaefmnt	fateman
p	p
	
first	first
deelopv	develop
a	a
giknorw	working
agmoprr	program
cdenos	second
eimnnrsttu	instrument
it	it
dhirt	third
aceelpr	replace
eht	the
losw	slow
aprst	parts
p	p
	
eht	the
eeprtx	expert
ilps	lisp
aegmmoprrr	programmer
aeellntuvy	eventually
deelopsv	develops
a	a
dgoo	good
cceeffiiny	efficiency
delmo	model
p	p
	
eehrt	there
aer	are
foru	four
aeeglnr	general
ceehinqstu	techniques
for	for
deeginps	speeding
pu	up
an	an
aghilmort	algorithm
accghin	caching
cgiilmnop	compiling
adegilny	delaying
acimnoopttu	computation
adn	and
degiinnx	indexing
p	p
	
ew	we
acn	can
eirtw	write
a	a
ceilmopr	compiler
as	as
a	a
est	set
fo	of
acmors	macros
p	p
	
aciilmnoopt	compilation
adn	and
aeiimmnootz	memoization
acn	can
deily	yield
dflo	fold
deeppssu	speedups
p	p
	
eelllovw	lowlevel
cceeffiiny	efficiency
ccennors	concerns
acn	can
deily	yield
dflo	fold
deeppssu	speedups
p	p
	
for	for
cceeffiiny	efficiency
esu	use
aacdeilnorst	declarations
adiov	avoid
ceeginr	generic
cfinnostu	functions
adiov	avoid
celmopx	complex
aegmnrtu	argument
ilsst	lists
adiov	avoid
aceennrssuy	unnecessary
cginnos	consing
esu	use
eht	the
ghirt	right
aadt	data
cerrsttuu	structure
p	p
	
a	a
aaegglnu	language
ahtt	that
denost	doesnt
acefft	affect
eht	the
awy	way
ouy	you
hiknt	think
abotu	about
aggimmnoprr	programming
is	is
not	not
hortw	worth
giknnow	knowing
	
aaln	alan
eilprs	perlis
p	p
	
gloopr	prolog
eeilrs	relies
no	on
eehrt	three
aimnoprtt	important
adeis	ideas
a	a
fimnoru	uniform
aadt	data
abes	base
cgilo	logic
aabeilrsv	variables
adn	and
aacimottu	automatic
aabccgikknrt	backtracking
p	p
	
gloopr	prolog
is	is
aiilmrs	similar
ot	to
ilps	lisp
no	on
eht	the
aimn	main
inopst	points
p	p
	
bcejot	object
aeiinnoortt	orientation
	
bcejost	objects
	
acelsss	classes
	
aceehiinnrt	inheritance
	
eeprt	peter
eegnrw	wegner
p	p
	
adeinst	instead
fo	of
bghiiinoprt	prohibiting
abgllo	global
aestt	state
as	as
acfilnnotu	functional
aggimmnoprr	programming
deos	does
bcdeeeijnoortt	objectoriented
aggimmnoprr	programming
abekrs	breaks
pu	up
eht	the
lnruuy	unruly
amss	mass
fo	of
abgllo	global
aestt	state
adn	and
aaceelnpsstu	encapsulates
it	it
inot	into
allms	small
aaabeeglmn	manageable
ceeips	pieces
or	or
bcejost	objects
p	p
	
ddeeginnp	depending
no	on
oruy	your
defiiinnot	definition
clos	clos
is	is
or	or
is	is
not	not
bcdeeeijnoortt	objectoriented
it	it
denost	doesnt
opprstu	support
aaceilnnopstu	encapsulation
p	p
	
gloopr	prolog
amy	may
not	not
deioprv	provide
aceltxy	exactly
eht	the
cgilo	logic
ouy	you
antw	want
p	p
	
nor	nor
eht	the
cceeffiiny	efficiency
ouy	you
antw	want
p	p
	
ehort	other
aeeeinnoprrstt	representation
ceehmss	schemes
aer	are
beilopss	possible
abdeelrsu	rulebased
aailnnorstt	translation
is	is
a	a
eflopruw	powerful
adei	idea
eehorvw	however
eeimmosst	sometimes
ouy	you
deen	need
emor	more
cceeffiiny	efficiency
adn	and
deen	need
ot	to
egiv	give
pu	up
eht	the
ciiilmpsty	simplicity
fo	of
a	a
abdeelrsu	rulebased
emssty	system
p	p
	
aagilnnrstt	translating
inpstu	inputs
ot	to
a	a
aaccilnno	canonical
fmor	form
is	is
efnot	often
a	a
dgoo	good
aegrstty	strategy
p	p
	
an	an
eeprtx	expert
emssty	system
egos	goes
bdenoy	beyond
a	a
eilmps	simple
cgilo	logic
aggimmnoprr	programming
emssty	system
it	it
deioprsv	provides
aeginnors	reasoning
hitw	with
aceinnrttuy	uncertainty
aaeilnnopstx	explanations
adn	and
beefillx	flexible
flow	flow
fo	of
clnoort	control
p	p
	
aceinrtty	certainty
acforst	factors
deioprv	provide
a	a
eilmps	simple
awy	way
fo	of
adegiln	dealing
hitw	with
aceinnrttuy	uncertainty
btu	but
eehrt	there
is	is
aeeglnr	general
aeeegmnrt	agreement
ahtt	that
abbeiiiloprst	probabilities
deioprv	provide
a	a
emor	more
dilos	solid
adfinnootu	foundation
p	p
	
eht	the
aegrstty	strategy
ouy	you
esu	use
ot	to
acehrs	search
for	for
a	a
ceeenqsu	sequence
fo	of
dgoo	good
emosv	moves
acn	can
be	be
aimnoprtt	important
p	p
	
ouy	you
acn	can
acemopr	compare
otw	two
deeffinrt	different
aeegirsstt	strategies
for	for
a	a
akst	task
by	by
ginnnru	running
adeeeprt	repeated
ailrst	trials
fo	of
eht	the
otw	two
p	p
	
it	it
apsy	pays
ot	to
cceelpry	precycle
p	p
	
aeiimmnootz	memoization
acn	can
nrtu	turn
an	an
ceeffiiinnt	inefficient
agmoprr	program
inot	into
an	an
ceeffiint	efficient
eno	one
p	p
	
it	it
is	is
efnot	often
aeeirs	easier
ot	to
adel	deal
hitw	with
ceeeefnprrs	preferences
agmno	among
cegimnopt	competing
aeeiinnoprrsttt	interpretations
fo	of
inpstu	inputs
aehrrt	rather
ahnt	than
ginrty	trying
ot	to
cilrstty	strictly
elru	rule
eno	one
aeeiinnoprrttt	interpretation
in	in
or	or
otu	out
p	p
	
cgilo	logic
agmoprrs	programs
aehv	have
a	a
eilmps	simple
awy	way
ot	to
eeprssx	express
aagmmrrs	grammars
p	p
	
adghilnn	handling
aefiinqrstu	quantifiers
in	in
aalnrtu	natural
aaeggilnu	languiage
acn	can
be	be
cikrty	tricky
p	p
	
adghilnn	handling
acdegilnnost	longdistance
cddeeeeinnps	dependencies
in	in
aalnrtu	natural
aaegglnu	language
acn	can
be	be
cikrty	tricky
p	p
	
addeginnnrstu	understanding
how	how
a	a
ceehms	scheme
eeeinprrrtt	interpreter
korsw	works
acn	can
egiv	give
ouy	you
a	a
beertt	better
aaceiinopprt	appreciation
fo	of
how	how
ilps	lisp
korsw	works
adn	and
hstu	thus
aekm	make
ouy	you
a	a
beertt	better
aegmmoprrr	programmer
p	p
	
eht	the
lrtuy	truly
aagimnz	amazing
deflnoruw	wonderful
ghint	thing
abotu	about
acccll	callcc
is	is
eht	the
abiilty	ability
ot	to
enrrtu	return
ot	to
a	a
aciinnnoottu	continuation
inopt	point
emor	more
ahnt	than
ceno	once
p	p
	
eht	the
first	first
ilps	lisp
eeeinprrrtt	interpreter
asw	was
a	a
elrstu	result
fo	of
a	a
aegmmoprrr	programmer
ggiinnor	ignoring
his	his
bosss	bosss
acdeiv	advice
p	p
	
abelnos	abelson
adn	and
amnsssu	sussman
	
is	is
abblopry	probably
eht	the
best	best
cdiinnoorttu	introduction
ot	to
cemoprtu	computer
cceeins	science
eerv	ever
einrttw	written
p	p
	
eht	the
eilmpsst	simplest
ceilmopr	compiler
deen	need
not	not
be	be
chmu	much
emor	more
celmopx	complex
ahnt	than
an	an
eeeinprrrtt	interpreter
p	p
	
an	an
aadeinorrrtxy	extraordinary
aeefrtu	feature
fo	of
ains	ansi
cmmnoo	common
ilps	lisp
is	is
eht	the
acfiilty	facility
for	for
adghilnn	handling
eorrrs	errors
p	p
	
fi	if
ouy	you
acn	can
addennrstu	understand
how	how
ot	to
eirtw	write
adn	and
ehnw	when
ot	to
esu	use
celnnooy	onceonly
ehnt	then
ouy	you
lrtuy	truly
addennrstu	understand
acmors	macros
p	p
	
a	a
dorw	word
ot	to
eht	the
eisw	wise
dnot	dont
egt	get
acdeirr	carried
aawy	away
hitw	with
acmors	macros
p	p
	
ahtw	what
ddi	did
aipp	paip
acchilmops	accomplish
as	as
an	an
aacddenv	advanced
ilps	lisp
ettx	text
aipp	paip
adnsst	stands
pu	up
ervy	very
ellw	well
eehrt	there
aer	are
illst	still
ervy	very
efw	few
ehort	other
acelps	places
ot	to
egt	get
a	a
ghhoortu	thorough
aeemnrttt	treatment
fo	of
cceeffiiny	efficiency
eisssu	issues
ilps	lisp
degins	design
eisssu	issues
adn	and
essu	uses
fo	of
acmors	macros
adn	and
ceilmoprs	compilers
for	for
acmors	macros
alpu	paul
aaghmrs	grahams
bkoos	books
aehv	have
deno	done
an	an
aceeillpsy	especially
ceeellntx	excellent
bjo	job
as	as
an	an
ai	ai
aggimmnoprr	programming
ettx	text
aipp	paip
deos	does
ellw	well
eht	the
lnoy	only
aelr	real
cegimnopt	competing
ettx	text
ot	to
eeegmr	emerge
ceelnrty	recently
is	is
bforsu	forbus
adn	and
de	de
eeklr	kleer
adn	and
ehty	they
aehv	have
a	a
emor	more
deiilmt	limited
adn	and
hstu	thus
emor	more
cdefosu	focused
adn	and
adeeginrtt	integrated
aachoppr	approach
acceginnnortt	concentrating
no	on
ceeefinnr	inference
emsssty	systems
eht	the
aachiknr	charniak
bceeikrs	riesbeck
adn	and
cdemmortt	mcdermott
bkoo	book
is	is
alos	also
illst	still
hortw	worth
giklnoo	looking
at	at
eno	one
aceghn	change
eorv	over
eht	the
alst	last
isx	six
aersy	years
is	is
ahtt	that
ai	ai
aggimmnoprr	programming
ahs	has
begnu	begun
ot	to
kloo	look
emor	more
eikl	like
aeglrru	regular
aggimmnoprr	programming
abceesu	because
a	a
ai	ai
agmoprrs	programs
eikl	like
aeglrru	regular
agmoprrs	programs
aer	are
acegiilnnrsy	increasingly
ccdeennor	concerned
hitw	with
aeglr	large
aadt	data
abess	bases
adn	and
b	b
aeglrru	regular
aegmmoprrrs	programmers
aehv	have
begnu	begun
ot	to
adderss	address
ghinst	things
chsu	such
as	as
aceghinrs	searching
eht	the
eeinnrtt	internet
adn	and
ceggiinnorz	recognizing
adghiinnrtw	handwriting
adn	and
ceehps	speech
an	an
ai	ai
aggimmnoprr	programming
ettx	text
adoty	today
dlouw	would
aehv	have
ot	to
ceorv	cover
aadt	data
abes	base
aceefinrst	interfaces
hptt	http
adn	and
ehort	other
eknortw	network
cloooprst	protocols
adeghinrt	threading
aacghilpr	graphical
aceefinrst	interfaces
adn	and
ehort	other
eisssu	issues
as	as
an	an
ai	ai
ettx	text
aipp	paip
deos	does
not	not
aefr	fare
as	as
ellw	well
it	it
eenrv	never
adeempttt	attempted
ot	to
be	be
a	a
ceeehimnoprsv	comprehensive
ai	ai
ettx	text
eginrssst	stressing
eht	the
aadgimprs	paradigms
or	or
accilsss	classics
fo	of
eht	the
defil	field
aehrrt	rather
ahnt	than
eht	the
most	most
cenrrtu	current
agmoprrs	programs
adn	and
eehiorst	theories
ahilppy	happily
eht	the
accilsss	classics
aer	are
beggiinnn	beginning
ot	to
kloo	look
beeloost	obsolete
now	now
eht	the
defil	field
dlouw	would
be	be
in	in
orrsy	sorry
aehps	shape
fi	if
ahtt	that
ddint	didnt
aehnpp	happen
aeellntuvy	eventually
for	for
a	a
emor	more
demnor	modern
aachoppr	approach
ot	to
ai	ai
efgort	forget
aipp	paip
adn	and
kloo	look
at	at
aacfiiilrt	artificial
ceeegiillnnt	intelligence
a	a
demnor	modern
aachoppr	approach
eeprt	peter
ginorv	norvig